{
"pipelineFragmentConfig": {
  "schemaVersion" : 2,
  "version" : 2,
  "fragmentId" : "datanormade1b4b1c-c456-40e9-ba41-cc8fc9d12b0e",
  "fragmentInstanceId" : "lates_01",
  "uuid" : "2bedd940-ffd2-486c-8fe5-52bfa6762071",
  "title" : "latest:oct:data:normalization",
  "description" : "data:normalization",
  "configuration" : [ {
    "name" : "executionMode",
    "value" : "STANDALONE"
  }, {
    "name" : "constants",
    "value" : [ ]
  }, {
    "name" : "testOriginStage",
    "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
  } ],
  "uiInfo" : {
    "fragmentStageConfiguration" : {
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fragment_FragmentProcessor",
      "uiInfo" : {
        "outputStreamLabels" : null,
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "rawSource" : null,
        "icon" : "fragment.png",
        "description" : "",
        "inputStreamLabels" : null,
        "firstStageInstanceName" : "FieldMapper_02",
        "label" : "Fragment Processor 1",
        "xPos" : 720
      },
      "instanceName" : "FragmentProcessor_01",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.fragmentId"
      }, {
        "name" : "conf.fragmentInstanceId"
      } ],
      "eventLanes" : [ ],
      "services" : [ ],
      "outputLanes" : [ "FieldTypeConverter_01OutputLane16286900940200" ],
      "inputLanes" : [ ]
    },
    "displayMode" : "BASIC"
  },
  "stages" : [ {
    "instanceName" : "FieldMapper_02",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_mapper_FieldMapperDProcessor",
    "stageVersion" : "1",
    "configuration" : [ {
      "name" : "fieldMapperConfig.operateOn",
      "value" : "FIELD_NAMES"
    }, {
      "name" : "fieldMapperConfig.conditionalExpression",
      "value" : "${str:matches(f:name(),'[\\\\s\\\\S]*')}"
    }, {
      "name" : "fieldMapperConfig.mappingExpression",
      "value" : "${str:toLower(str:replaceAll(str:replaceAll(str:replaceAll(f:name(),'[\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\x7e]',\"_\"),\"_[_]+\",\"_\"),\"(^[0-9])(.*)\",\"_$1$2\"))}"
    }, {
      "name" : "fieldMapperConfig.aggregationExpression",
      "value" : "${fields}"
    }, {
      "name" : "fieldMapperConfig.structureChangeAllowed",
      "value" : false
    }, {
      "name" : "fieldMapperConfig.appendListValues",
      "value" : false
    }, {
      "name" : "fieldMapperConfig.maintainOriginalPaths",
      "value" : false
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "services" : [ ],
    "uiInfo" : {
      "outputStreamLabels" : null,
      "yPos" : 50,
      "stageType" : "PROCESSOR",
      "rawSource" : null,
      "icon" : "iconfinder_thefreeforty_map_1243687.png",
      "description" : "schema normalization phase1",
      "inputStreamLabels" : null,
      "label" : "schema normalization phase1",
      "xPos" : 60,
      "displayMode" : "ADVANCED"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ "FieldMapper_02OutputLane16258413184420" ],
    "eventLanes" : [ ]
  }, {
    "instanceName" : "FieldMapper_04",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_mapper_FieldMapperDProcessor",
    "stageVersion" : "1",
    "configuration" : [ {
      "name" : "fieldMapperConfig.operateOn",
      "value" : "FIELD_VALUES"
    }, {
      "name" : "fieldMapperConfig.conditionalExpression",
      "value" : "${f:type() == \"STRING\" && f:value() != NULL}"
    }, {
      "name" : "fieldMapperConfig.mappingExpression",
      "value" : "${str:trim(str:replaceAll(str:replaceAll(f:value(),'[^\\\\x20-\\\\x7e]',\"\"),\" [ ]+\",\" \"))}"
    }, {
      "name" : "fieldMapperConfig.aggregationExpression",
      "value" : "${fields}"
    }, {
      "name" : "fieldMapperConfig.structureChangeAllowed",
      "value" : true
    }, {
      "name" : "fieldMapperConfig.appendListValues",
      "value" : false
    }, {
      "name" : "fieldMapperConfig.maintainOriginalPaths",
      "value" : false
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "services" : [ ],
    "uiInfo" : {
      "outputStreamLabels" : null,
      "yPos" : 50,
      "stageType" : "PROCESSOR",
      "rawSource" : null,
      "icon" : "iconfinder_thefreeforty_map_1243687.png",
      "description" : "Data cleansing ",
      "inputStreamLabels" : null,
      "label" : "Data cleansing ",
      "xPos" : 280,
      "displayMode" : "BASIC"
    },
    "inputLanes" : [ "FieldMapper_02OutputLane16258413184420" ],
    "outputLanes" : [ "FieldMapper_04OutputLane16280988773040" ],
    "eventLanes" : [ ]
  }, {
    "instanceName" : "FieldTypeConverter_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor",
    "stageVersion" : "3",
    "configuration" : [ {
      "name" : "convertBy",
      "value" : "BY_TYPE"
    }, {
      "name" : "fieldTypeConverterConfigs",
      "value" : [ {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "INTEGER",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "fields" : [ ],
        "inputFieldEmpty" : "ERROR",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      } ]
    }, {
      "name" : "wholeTypeConverterConfigs",
      "value" : [ {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "sourceType" : "DECIMAL",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "DOUBLE",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "inputFieldEmpty" : "NULL",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      }, {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "sourceType" : "BYTE_ARRAY",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "STRING",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "inputFieldEmpty" : "ERROR",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      }, {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "sourceType" : "CHAR",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "STRING",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "inputFieldEmpty" : "ERROR",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      }, {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "sourceType" : "BYTE",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "STRING",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "inputFieldEmpty" : "ERROR",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      }, {
        "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
        "sourceType" : "SHORT",
        "dateFormat" : "YYYY_MM_DD",
        "scale" : -1,
        "targetType" : "INTEGER",
        "dataLocale" : "en,US",
        "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
        "inputFieldEmpty" : "ERROR",
        "encoding" : "UTF-8",
        "treatInputFieldAsDate" : false
      } ]
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "services" : [ ],
    "uiInfo" : {
      "outputStreamLabels" : null,
      "yPos" : 50,
      "stageType" : "PROCESSOR",
      "rawSource" : null,
      "icon" : "converter.png",
      "description" : "Decimal to Double ",
      "inputStreamLabels" : null,
      "label" : "Decimal to Double ",
      "xPos" : 500,
      "displayMode" : "ADVANCED"
    },
    "inputLanes" : [ "FieldMapper_04OutputLane16280988773040" ],
    "outputLanes" : [ "FieldTypeConverter_01OutputLane16286900940200" ],
    "eventLanes" : [ ]
  } ],
  "info" : {
    "name" : "latestoctdatanormalization7d4bf64c-f5c4-47ee-a153-52a641ca72f2",
    "pipelineId" : "latestoctdatanormalization7d4bf64c-f5c4-47ee-a153-52a641ca72f2",
    "title" : "latest:oct:data:normalization",
    "description" : "data:normalization",
    "created" : 1625851665593,
    "lastModified" : 1625851665593,
    "creator" : "SDC_P_CLAIM@nationwide.com",
    "lastModifier" : "SDC_P_CLAIM@nationwide.com",
    "lastRev" : "0",
    "uuid" : "2bedd940-ffd2-486c-8fe5-52bfa6762071",
    "valid" : false,
    "metadata" : null,
    "sdcVersion" : "4.1.0",
    "sdcId" : "cf789c90-d860-11eb-a746-cb0885d5999a"
  },
  "issues" : {
    "pipelineIssues" : [ ],
    "stageIssues" : { },
    "issueCount" : 0
  },
  "valid" : true,
  "previewable" : false,
  "metadata" : {
    "dpm.pipeline.rules.id" : "68df1ca9-199f-4a5d-a3da-e26a0d106bae:sch-cs-jeanmarie",
    "dpm.pipeline.connections" : "",
    "dpm.pipeline.id" : "7c2819e2-3eb0-448e-be1e-238ad50bce98:sch-cs-jeanmarie",
    "dpm.base.url" : "https://trailer.streamsetscloud.com",
    "dpm.pipeline.version" : "2",
    "dpm.pipeline.commit.id" : "2af22ced-b227-4f69-8ccc-2e63908988ad:sch-cs-jeanmarie",
    "labels" : [ "Processors", "Processors" ]
  },
  "fragments" : [ ],
  "testOriginStage" : {
    "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
    "library" : "streamsets-datacollector-dev-lib",
    "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
    "stageVersion" : "3",
    "configuration" : [ {
      "name" : "rawData",
      "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
    }, {
      "name" : "stopAfterFirstBatch",
      "value" : false
    }, {
      "name" : "eventData",
      "value" : null
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    } ],
    "services" : [ {
      "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
      "serviceVersion" : 4,
      "configuration" : [ {
        "name" : "displayFormats",
        "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
      }, {
        "name" : "dataFormat",
        "value" : "JSON"
      }, {
        "name" : "dataFormatConfig.compression",
        "value" : "NONE"
      }, {
        "name" : "dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.useCustomDelimiter",
        "value" : false
      }, {
        "name" : "dataFormatConfig.customDelimiter",
        "value" : "\\r\\n"
      }, {
        "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
        "value" : false
      }, {
        "name" : "dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "dataFormatConfig.multiCharacterFieldDelimiter",
        "value" : "||"
      }, {
        "name" : "dataFormatConfig.multiCharacterLineDelimiter",
        "value" : "${str:unescapeJava('\\\\n')}"
      }, {
        "name" : "dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "dataFormatConfig.csvUnivocityFieldSeparator",
        "value" : ","
      }, {
        "name" : "dataFormatConfig.csvUnivocityEscape",
        "value" : "\\"
      }, {
        "name" : "dataFormatConfig.csvUnivocityQuote",
        "value" : "\""
      }, {
        "name" : "dataFormatConfig.csvUnivocityLineSeparator",
        "value" : "${str:unescapeJava('\\\\n')}"
      }, {
        "name" : "dataFormatConfig.csvParser",
        "value" : "LEGACY_PARSER"
      }, {
        "name" : "dataFormatConfig.csvAllowExtraColumns",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvExtraColumnPrefix",
        "value" : "_extra_"
      }, {
        "name" : "dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.csvUnivocityMaxColumns",
        "value" : 1000
      }, {
        "name" : "dataFormatConfig.csvUnivocityMaxCharsPerColumn",
        "value" : 1000
      }, {
        "name" : "dataFormatConfig.csvUnivocitySkipEmptyLines",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvUnivocityAllowComments",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvUnivocityCommentMarker",
        "value" : "#"
      }, {
        "name" : "dataFormatConfig.csvEnableComments",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvCommentMarker",
        "value" : "#"
      }, {
        "name" : "dataFormatConfig.csvIgnoreEmptyLines",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "dataFormatConfig.parseNull",
        "value" : false
      }, {
        "name" : "dataFormatConfig.nullConstant",
        "value" : "\\\\N"
      }, {
        "name" : "dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "dataFormatConfig.preserveRootElement",
        "value" : false
      }, {
        "name" : "dataFormatConfig.includeFieldXpathAttributes",
        "value" : false
      }, {
        "name" : "dataFormatConfig.xPathNamespaceContext",
        "value" : [ ]
      }, {
        "name" : "dataFormatConfig.outputFieldAttributes",
        "value" : false
      }, {
        "name" : "dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "dataFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "dataFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "dataFormatConfig.basicAuth",
        "value" : null
      }, {
        "name" : "dataFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "dataFormatConfig.subject",
        "value" : null
      }, {
        "name" : "dataFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "dataFormatConfig.avroSkipUnionIndex",
        "value" : false
      }, {
        "name" : "dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "dataFormatConfig.isDelimited",
        "value" : false
      }, {
        "name" : "dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.datagramMode",
        "value" : "SYSLOG"
      }, {
        "name" : "dataFormatConfig.typesDbPath",
        "value" : null
      }, {
        "name" : "dataFormatConfig.convertTime",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excludeInterval",
        "value" : false
      }, {
        "name" : "dataFormatConfig.authFilePath",
        "value" : null
      }, {
        "name" : "dataFormatConfig.netflowOutputValuesMode",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "dataFormatConfig.maxTemplateCacheSize",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.templateCacheTimeoutMs",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.wholeFileMaxObjectLen",
        "value" : 8192
      }, {
        "name" : "dataFormatConfig.rateLimit",
        "value" : "-1"
      }, {
        "name" : "dataFormatConfig.verifyChecksum",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excelHeader",
        "value" : null
      }, {
        "name" : "dataFormatConfig.excelSkipCellsWithNoHeader",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excelReadAllSheets",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excelSheetNames",
        "value" : [ ]
      }, {
        "name" : "dataFormatConfig.excelIncludeCellsWithEmptyValue",
        "value" : false
      } ]
    } ],
    "uiInfo" : {
      "stageType" : "SOURCE",
      "icon" : "dev.png",
      "label" : "Test Origin - Dev Raw Data Source"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
    "eventLanes" : [ ]
  }
},
"pipelineRules": {
  "schemaVersion" : null,
  "version" : "2",
  "metricsRuleDefinitions" : [ ],
  "dataRuleDefinitions" : [ ],
  "driftRuleDefinitions" : [ ],
  "emailIds" : [ ],
  "uuid" : null,
  "ruleIssues" : [ ],
  "configuration" : [ ],
  "configIssues" : [ ]
},
"libraryDefinitions": {
  "schemaVersion" : null,
  "pipeline" : null,
  "pipelineFragment" : [ {
    "configGroupDefinition" : {
      "classNameToGroupsMap" : {
        "com.streamsets.datacollector.config.PipelineFragmentGroups" : [ "PARAMETERS" ]
      },
      "groupNameToLabelMapList" : [ {
        "name" : "PARAMETERS",
        "label" : "Parameters"
      } ]
    },
    "configDefinitions" : [ {
      "name" : "executionMode",
      "type" : "MODEL",
      "upload" : null,
      "defaultValue" : "STANDALONE",
      "label" : "Execution Mode",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Standalone", "Cluster Batch", "Cluster Yarn Streaming", "Cluster Mesos Streaming", "Edge" ],
        "valuesProviderClass" : "com.streamsets.datacollector.config.ExecutionModeChooserValues",
        "values" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING", "EDGE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 10,
      "dependsOnMap" : { },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "BASIC",
      "connectionType" : null,
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "executionMode"
    }, {
      "name" : "constants",
      "type" : "MAP",
      "upload" : null,
      "defaultValue" : [ ],
      "label" : "Parameters",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54" ],
      "elConstantDefinitionsIdx" : [ "55" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 80,
      "dependsOnMap" : { },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "PARAMETERS",
      "displayMode" : "BASIC",
      "connectionType" : null,
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "constants"
    } ]
  } ],
  "pipelineRules" : [ ],
  "stages" : [ {
    "eventDefs" : [ ],
    "name" : "com_streamsets_pipeline_stage_processor_mapper_FieldMapperDProcessor",
    "type" : "PROCESSOR",
    "className" : "com.streamsets.pipeline.stage.processor.mapper.FieldMapperDProcessor",
    "label" : "Field Mapper",
    "libraryLabel" : "Basic",
    "configGroupDefinition" : {
      "classNameToGroupsMap" : {
        "com.streamsets.pipeline.stage.processor.mapper.Groups" : [ "MAPPER" ]
      },
      "groupNameToLabelMapList" : [ {
        "name" : "MAPPER",
        "label" : "Mapper"
      } ]
    },
    "rawSourceDefinition" : null,
    "errorStage" : false,
    "statsAggregatorStage" : false,
    "connectionVerifierStage" : false,
    "pipelineLifecycleStage" : false,
    "offsetCommitTrigger" : false,
    "variableOutputStreams" : false,
    "outputStreams" : 1,
    "outputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultOutputStreams",
    "outputStreamLabels" : null,
    "outputStreamsDrivenByConfig" : "",
    "services" : [ ],
    "hideStage" : [ ],
    "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING", "EMR_BATCH" ],
    "description" : "Maps fields in records based on expressions. Operates on field paths, names, or values.",
    "privateClassLoader" : false,
    "library" : "streamsets-datacollector-basic-lib",
    "configDefinitions" : [ {
      "name" : "fieldMapperConfig.operateOn",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "FIELD_VALUES",
      "label" : "Operate On",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : [ "Field Paths", "Field Names", "Field Values" ],
        "valuesProviderClass" : "com.streamsets.pipeline.stage.processor.mapper.OperateOnChooserValues",
        "values" : [ "FIELD_PATHS", "FIELD_NAMES", "FIELD_VALUES" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 100,
      "dependsOnMap" : { },
      "description" : "Controls whether this mapper will operate on field paths, names, or values.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "operateOn"
    }, {
      "name" : "fieldMapperConfig.conditionalExpression",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Conditional Expression",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "2415", "2416", "2417", "2418", "2419", "2420", "2421", "2422", "2423", "2424", "2425", "2426", "2427", "2428", "2429", "2430", "2431", "2432", "2433", "2434", "2435", "2436", "2437", "2438", "2439", "2440", "2441", "2442", "2443", "2444", "2445", "2708", "2709", "2710", "2711", "2712", "2713", "2714", "2715", "2716", "2717", "2718", "2792", "2793", "2794", "2795", "2796", "2797", "2460", "2461", "2462", "2463", "2464", "2465", "2466", "2467", "2468", "2469", "2470", "2471", "2472" ],
      "elConstantDefinitionsIdx" : [ "64", "2478", "2479", "2480", "2481", "2482", "2483", "2484", "2485", "2486", "2487", "2488", "2489", "2490", "2491", "2492", "2493", "2494" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 200,
      "dependsOnMap" : { },
      "description" : "An expression that controls whether the mapper should apply to any particular field in the inputrecord. Leave this blank to apply the mapping to all fields in the record (unconditionally).",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "conditionalExpression"
    }, {
      "name" : "fieldMapperConfig.mappingExpression",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "${f:value()}",
      "label" : "Mapping Expression",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "2415", "2416", "2417", "2418", "2419", "2420", "2421", "2422", "2423", "2424", "2425", "2426", "2427", "2428", "2429", "2430", "2431", "2432", "2433", "2434", "2435", "2436", "2437", "2438", "2439", "2440", "2441", "2442", "2443", "2444", "2445", "2708", "2709", "2710", "2711", "2712", "2713", "2714", "2715", "2716", "2717", "2718", "2792", "2793", "2794", "2795", "2796", "2797", "2460", "2461", "2462", "2463", "2464", "2465", "2466", "2467", "2468", "2469", "2470", "2471", "2472" ],
      "elConstantDefinitionsIdx" : [ "64", "2478", "2479", "2480", "2481", "2482", "2483", "2484", "2485", "2486", "2487", "2488", "2489", "2490", "2491", "2492", "2493", "2494" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 300,
      "dependsOnMap" : { },
      "description" : "The expression that transforms the field path, name, or value.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "mappingExpression"
    }, {
      "name" : "fieldMapperConfig.aggregationExpression",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "${fields}",
      "label" : "Aggregation Expression",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "2415", "2416", "2417", "2418", "2419", "2420", "2421", "2422", "2423", "2424", "2425", "2426", "2427", "2428", "2429", "2430", "2431", "2432", "2433", "2434", "2435", "2436", "2437", "2438", "2439", "2440", "2441", "2442", "2443", "2444", "2445", "2708", "2709", "2710", "2711", "2712", "2713", "2714", "2715", "2716", "2717", "2718", "2792", "2793", "2794", "2795", "2796", "2797", "2460", "2461", "2462", "2463", "2464", "2465", "2466", "2467", "2468", "2469", "2470", "2471", "2472" ],
      "elConstantDefinitionsIdx" : [ "64", "2478", "2479", "2480", "2481", "2482", "2483", "2484", "2485", "2486", "2487", "2488", "2489", "2490", "2491", "2492", "2493", "2494" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 300,
      "dependsOnMap" : {
        "fieldMapperConfig.operateOn" : [ "FIELD_PATHS" ]
      },
      "description" : "An expression that controls how to aggregate the results, if multiple fields map to the same path.  The results will be available in a variable called \"fields\".",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "aggregationExpression"
    }, {
      "name" : "fieldMapperConfig.structureChangeAllowed",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Structure Change Allowed",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 400,
      "dependsOnMap" : {
        "fieldMapperConfig.operateOn" : [ "FIELD_PATHS", "FIELD_NAMES" ]
      },
      "description" : "Controls whether the mapping is allowed to change the structure of the record by adding new fields, changing types, etc.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "structureChangeAllowed"
    }, {
      "name" : "fieldMapperConfig.appendListValues",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Append List Values",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 500,
      "dependsOnMap" : {
        "fieldMapperConfig.operateOn" : [ "FIELD_PATHS", "FIELD_NAMES" ]
      },
      "description" : "Controls what happens if multiple fields map to an existing list field. If true, mapped fields will be appended to this list. If false, the mapped fields will replace all existing values in the list.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "appendListValues"
    }, {
      "name" : "fieldMapperConfig.maintainOriginalPaths",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Maintain Original Paths",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 600,
      "dependsOnMap" : {
        "fieldMapperConfig.operateOn" : [ "FIELD_PATHS", "FIELD_NAMES" ]
      },
      "description" : "When a field is mapped to a new location (either name or path), it is removed unless this property is set.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "MAPPER",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "maintainOriginalPaths"
    }, {
      "name" : "stageOnRecordError",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "TO_ERROR",
      "label" : "On Record Error",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ],
        "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
        "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 30,
      "dependsOnMap" : { },
      "description" : "Action to take with records sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageOnRecordError"
    }, {
      "name" : "stageRequiredFields",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Required Fields",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : null,
        "valuesProviderClass" : null,
        "values" : null,
        "configDefinitions" : null,
        "filteringConfig" : null,
        "modelType" : "FIELD_SELECTOR_MULTI_VALUE"
      },
      "lines" : 0,
      "displayPosition" : 10,
      "dependsOnMap" : { },
      "description" : "Records without any of these fields are sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageRequiredFields"
    }, {
      "name" : "stageRecordPreconditions",
      "type" : "LIST",
      "upload" : "NO",
      "defaultValue" : [ ],
      "label" : "Preconditions",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99" ],
      "elConstantDefinitionsIdx" : [ "64", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 20,
      "dependsOnMap" : { },
      "description" : "Records that don't satisfy all the preconditions are sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageRecordPreconditions"
    } ],
    "version" : "1",
    "icon" : "iconfinder_thefreeforty_map_1243687.png",
    "onRecordError" : true,
    "preconditions" : true,
    "resetOffset" : false,
    "producingEvents" : false,
    "onlineHelpRefUrl" : "index.html?contextID=task_f2j_g2q_xgb",
    "sendsResponse" : false,
    "beta" : false,
    "inputStreams" : -1,
    "inputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultInputStreams",
    "inputStreamLabels" : null,
    "bisectable" : false,
    "yamlUpgrader" : "upgrader/FieldMapperDProcessor.yaml"
  }, {
    "eventDefs" : [ ],
    "name" : "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor",
    "type" : "PROCESSOR",
    "className" : "com.streamsets.pipeline.stage.processor.fieldtypeconverter.FieldTypeConverterDProcessor",
    "label" : "Field Type Converter",
    "libraryLabel" : "Basic",
    "configGroupDefinition" : {
      "classNameToGroupsMap" : {
        "com.streamsets.pipeline.stage.processor.fieldtypeconverter.Groups" : [ "TYPE_CONVERSION" ]
      },
      "groupNameToLabelMapList" : [ {
        "name" : "TYPE_CONVERSION",
        "label" : "Conversions"
      } ]
    },
    "rawSourceDefinition" : null,
    "errorStage" : false,
    "statsAggregatorStage" : false,
    "connectionVerifierStage" : false,
    "pipelineLifecycleStage" : false,
    "offsetCommitTrigger" : false,
    "variableOutputStreams" : false,
    "outputStreams" : 1,
    "outputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultOutputStreams",
    "outputStreamLabels" : null,
    "outputStreamsDrivenByConfig" : "",
    "services" : [ ],
    "hideStage" : [ ],
    "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING", "EMR_BATCH" ],
    "description" : "Converts the data type of a field(s)",
    "privateClassLoader" : false,
    "library" : "streamsets-datacollector-basic-lib",
    "configDefinitions" : [ {
      "name" : "convertBy",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "BY_FIELD",
      "label" : "Conversion Method",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : [ "By Field Name", "By Data Type" ],
        "valuesProviderClass" : "com.streamsets.pipeline.stage.processor.fieldtypeconverter.ConvertByChooserValues",
        "values" : [ "BY_FIELD", "BY_TYPE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 5,
      "dependsOnMap" : { },
      "description" : "Select type of conversion that will be performed.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "TYPE_CONVERSION",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "convertBy"
    }, {
      "name" : "fieldTypeConverterConfigs",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : null,
        "valuesProviderClass" : null,
        "values" : null,
        "configDefinitions" : [ {
          "name" : "fields",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Fields to Convert",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : null,
            "valuesProviderClass" : null,
            "values" : null,
            "configDefinitions" : null,
            "filteringConfig" : null,
            "modelType" : "FIELD_SELECTOR_MULTI_VALUE"
          },
          "lines" : 0,
          "displayPosition" : 10,
          "dependsOnMap" : { },
          "description" : "You can convert multiple fields to the same type",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "EXPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "fields"
        }, {
          "name" : "targetType",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "INTEGER",
          "label" : "Convert to Type",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.PrimitiveFieldTypeChooserValues",
            "values" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : { },
          "description" : "Select a compatible data type",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "targetType"
        }, {
          "name" : "inputFieldEmpty",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ERROR",
          "label" : "Source Field is Empty",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Do not convert", "Remove field", "Set as null", "Send to error" ],
            "valuesProviderClass" : "com.streamsets.pipeline.stage.processor.fieldtypeconverter.InputFieldEmptyChooserValues",
            "values" : [ "IGNORE", "DELETE", "NULL", "ERROR" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : {
            "targetType" : [ "TIME", "FLOAT", "DECIMAL", "DATETIME", "DOUBLE", "ZONED_DATETIME", "BYTE", "LONG", "DATE", "SHORT", "CHAR", "INTEGER" ]
          },
          "description" : "Action to take when the source field is an empty string.",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "inputFieldEmpty"
        }, {
          "name" : "treatInputFieldAsDate",
          "type" : "BOOLEAN",
          "upload" : "NO",
          "defaultValue" : false,
          "label" : "Treat Input Field as Date",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : {
            "targetType" : [ "STRING" ]
          },
          "description" : "Select to convert input Long to DateTime before converting to a String",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "treatInputFieldAsDate"
        }, {
          "name" : "dataLocale",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "en,US",
          "label" : "Data Locale",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Albanian", "Albanian (Albania)", "Arabic", "Arabic (Algeria)", "Arabic (Bahrain)", "Arabic (Egypt)", "Arabic (Iraq)", "Arabic (Jordan)", "Arabic (Kuwait)", "Arabic (Lebanon)", "Arabic (Libya)", "Arabic (Morocco)", "Arabic (Oman)", "Arabic (Qatar)", "Arabic (Saudi Arabia)", "Arabic (Sudan)", "Arabic (Syria)", "Arabic (Tunisia)", "Arabic (United Arab Emirates)", "Arabic (Yemen)", "Belarusian", "Belarusian (Belarus)", "Bulgarian", "Bulgarian (Bulgaria)", "Catalan", "Catalan (Spain)", "Chinese", "Chinese (China)", "Chinese (Hong Kong)", "Chinese (Singapore)", "Chinese (Taiwan)", "Croatian", "Croatian (Croatia)", "Czech", "Czech (Czech Republic)", "Danish", "Danish (Denmark)", "Dutch", "Dutch (Belgium)", "Dutch (Netherlands)", "English", "English (Australia)", "English (Canada)", "English (India)", "English (Ireland)", "English (Malta)", "English (New Zealand)", "English (Philippines)", "English (Singapore)", "English (South Africa)", "English (United Kingdom)", "English (United States)", "Estonian", "Estonian (Estonia)", "Finnish", "Finnish (Finland)", "French", "French (Belgium)", "French (Canada)", "French (France)", "French (Luxembourg)", "French (Switzerland)", "German", "German (Austria)", "German (Germany)", "German (Greece)", "German (Luxembourg)", "German (Switzerland)", "Greek", "Greek (Cyprus)", "Greek (Greece)", "Hebrew", "Hebrew (Israel)", "Hindi", "Hindi (India)", "Hungarian", "Hungarian (Hungary)", "Icelandic", "Icelandic (Iceland)", "Indonesian", "Indonesian (Indonesia)", "Irish", "Irish (Ireland)", "Italian", "Italian (Italy)", "Italian (Switzerland)", "Japanese", "Japanese (Japan)", "Japanese (Japan,JP)", "Korean", "Korean (South Korea)", "Latvian", "Latvian (Latvia)", "Lithuanian", "Lithuanian (Lithuania)", "Macedonian", "Macedonian (Macedonia)", "Malay", "Malay (Malaysia)", "Maltese", "Maltese (Malta)", "Norwegian", "Norwegian (Norway)", "Norwegian (Norway,Nynorsk)", "Polish", "Polish (Poland)", "Portuguese", "Portuguese (Brazil)", "Portuguese (Portugal)", "Romanian", "Romanian (Romania)", "Russian", "Russian (Russia)", "Serbian (Latin)", "Serbian (Latin,Bosnia and Herzegovina)", "Serbian (Montenegro)", "Serbian (Serbia and Montenegro)", "Serbian (Serbia)", "Slovak", "Slovak (Slovakia)", "Slovenian", "Slovenian (Slovenia)", "Spanish", "Spanish (Argentina)", "Spanish (Bolivia)", "Spanish (Chile)", "Spanish (Colombia)", "Spanish (Costa Rica)", "Spanish (Cuba)", "Spanish (Dominican Republic)", "Spanish (Ecuador)", "Spanish (El Salvador)", "Spanish (Guatemala)", "Spanish (Honduras)", "Spanish (Mexico)", "Spanish (Nicaragua)", "Spanish (Panama)", "Spanish (Paraguay)", "Spanish (Peru)", "Spanish (Puerto Rico)", "Spanish (Spain)", "Spanish (United States)", "Spanish (Uruguay)", "Spanish (Venezuela)", "Swedish", "Swedish (Sweden)", "Thai", "Thai (Thailand)", "Thai (Thailand,TH)", "Turkish", "Turkish (Turkey)", "Ukrainian", "Ukrainian (Ukraine)", "Vietnamese", "Vietnamese (Vietnam)" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.LocaleChooserValues",
            "values" : [ "sq", "sq,AL", "ar", "ar,DZ", "ar,BH", "ar,EG", "ar,IQ", "ar,JO", "ar,KW", "ar,LB", "ar,LY", "ar,MA", "ar,OM", "ar,QA", "ar,SA", "ar,SD", "ar,SY", "ar,TN", "ar,AE", "ar,YE", "be", "be,BY", "bg", "bg,BG", "ca", "ca,ES", "zh", "zh,CN", "zh,HK", "zh,SG", "zh,TW", "hr", "hr,HR", "cs", "cs,CZ", "da", "da,DK", "nl", "nl,BE", "nl,NL", "en", "en,AU", "en,CA", "en,IN", "en,IE", "en,MT", "en,NZ", "en,PH", "en,SG", "en,ZA", "en,GB", "en,US", "et", "et,EE", "fi", "fi,FI", "fr", "fr,BE", "fr,CA", "fr,FR", "fr,LU", "fr,CH", "de", "de,AT", "de,DE", "de,GR", "de,LU", "de,CH", "el", "el,CY", "el,GR", "iw", "iw,IL", "hi", "hi,IN", "hu", "hu,HU", "is", "is,IS", "in", "in,ID", "ga", "ga,IE", "it", "it,IT", "it,CH", "ja", "ja,JP", "ja,JP,JP", "ko", "ko,KR", "lv", "lv,LV", "lt", "lt,LT", "mk", "mk,MK", "ms", "ms,MY", "mt", "mt,MT", "no", "no,NO", "no,NO,NY", "pl", "pl,PL", "pt", "pt,BR", "pt,PT", "ro", "ro,RO", "ru", "ru,RU", "sr", "sr,BA", "sr,ME", "sr,CS", "sr,RS", "sk", "sk,SK", "sl", "sl,SI", "es", "es,AR", "es,BO", "es,CL", "es,CO", "es,CR", "es,CU", "es,DO", "es,EC", "es,SV", "es,GT", "es,HN", "es,MX", "es,NI", "es,PA", "es,PY", "es,PE", "es,PR", "es,ES", "es,US", "es,UY", "es,VE", "sv", "sv,SE", "th", "th,TH", "th,TH,TH", "tr", "tr,TR", "uk", "uk,UA", "vi", "vi,VN" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 30,
          "dependsOnMap" : {
            "targetType" : [ "FLOAT", "DECIMAL", "DOUBLE", "ZONED_DATETIME", "BYTE", "LONG", "SHORT", "INTEGER" ]
          },
          "description" : "Affects the interpretation of locale sensitive data, such as using the comma as a decimal separator",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "dataLocale"
        }, {
          "name" : "scale",
          "type" : "NUMBER",
          "upload" : "NO",
          "defaultValue" : -1,
          "label" : "Scale",
          "mode" : "text/plain",
          "required" : false,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 40,
          "dependsOnMap" : {
            "targetType" : [ "DECIMAL" ]
          },
          "description" : "Decimal Value Scale",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "scale"
        }, {
          "name" : "decimalScaleRoundingStrategy",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ROUND_UNNECESSARY",
          "label" : "Rounding Strategy",
          "mode" : "text/plain",
          "required" : false,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Round up", "Round Down", "Round Ceil", "Round Floor", "Round Half Up", "Round Half Down", "Round Half Even", "Round Unnecessary" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.DecimalScaleRoundingStrategyChooserValues",
            "values" : [ "ROUND_UP", "ROUND_DOWN", "ROUND_CEILING", "ROUND_FLOOR", "ROUND_HALF_UP", "ROUND_HALF_DOWN", "ROUND_HALF_EVEN", "ROUND_UNNECESSARY" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 50,
          "dependsOnMap" : {
            "targetType" : [ "DECIMAL" ]
          },
          "description" : "Rounding strategy during scale conversion",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "decimalScaleRoundingStrategy"
        }, {
          "name" : "dateFormat",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "YYYY_MM_DD",
          "label" : "Date Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "yyyy-MM-dd", "dd-MMM-yyyy", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss.SSS Z", "yyyy-MM-dd'T'HH:mm'Z'", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "Other ..." ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.DateFormatChooserValues",
            "values" : [ "YYYY_MM_DD", "DD_MM_YYYY", "YYYY_MM_DD_HH_MM_SS", "YYYY_MM_DD_HH_MM_SS_SSS", "YYYY_MM_DD_HH_MM_SS_SSS_Z", "YYYY_MM_DD_T_HH_MM_Z", "YYYY_MM_DD_T_HH_MM_SS_SSS_Z", "OTHER" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 40,
          "dependsOnMap" : {
            "targetType" : [ "TIME", "DATETIME", "STRING", "DATE" ]
          },
          "description" : "Select or enter any valid date or datetime format",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "dateFormat"
        }, {
          "name" : "otherDateFormat",
          "type" : "STRING",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Other Date Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 50,
          "dependsOnMap" : {
            "dateFormat" : [ "OTHER" ],
            "targetType" : [ "TIME", "DATETIME", "STRING", "DATE" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "otherDateFormat"
        }, {
          "name" : "zonedDateTimeFormat",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ISO_ZONED_DATE_TIME",
          "label" : "Zoned DateTime Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "yyyy-MM-dd'T'HH:mm:ssX", "yyyy-MM-dd'T'HH:mm:ssX[VV]", "Other ..." ],
            "valuesProviderClass" : "com.streamsets.pipeline.ZonedDateTimeFormatChooserValues",
            "values" : [ "ISO_OFFSET_DATE_TIME", "ISO_ZONED_DATE_TIME", "OTHER" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 60,
          "dependsOnMap" : {
            "targetType" : [ "STRING", "ZONED_DATETIME" ]
          },
          "description" : "Select or enter any valid date or datetime format",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "zonedDateTimeFormat"
        }, {
          "name" : "zonedDateTimeTargetTimeZone",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Target Time Zone",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Same as Data Collector: +00:00 GMT (GMT)", "-11:00 ST (US/Samoa)", "-11:00 ST (Pacific/Samoa)", "-11:00 ST (Pacific/Pago_Pago)", "-11:00 ST (Pacific/Midway)", "-11:00 NUT (Pacific/Niue)", "-10:00 TAHT (Pacific/Tahiti)", "-10:00 HT (US/Hawaii)", "-10:00 HT (US/Aleutian)", "-10:00 HT (SystemV/HST10)", "-10:00 HT (Pacific/Johnston)", "-10:00 HT (Pacific/Honolulu)", "-10:00 HT (America/Atka)", "-10:00 HT (America/Adak)", "-10:00 CKT (Pacific/Rarotonga)", "-09:30 MART (Pacific/Marquesas)", "-09:00 GAMT (Pacific/Gambier)", "-09:00 AKT (US/Alaska)", "-09:00 AKT (SystemV/YST9YDT)", "-09:00 AKT (SystemV/YST9)", "-09:00 AKT (America/Yakutat)", "-09:00 AKT (America/Sitka)", "-09:00 AKT (America/Nome)", "-09:00 AKT (America/Metlakatla)", "-09:00 AKT (America/Juneau)", "-09:00 AKT (America/Anchorage)", "-08:00 PT (US/Pacific-New)", "-08:00 PT (US/Pacific)", "-08:00 PT (SystemV/PST8PDT)", "-08:00 PT (SystemV/PST8)", "-08:00 PT (Pacific/Pitcairn)", "-08:00 PT (PST8PDT)", "-08:00 PT (Mexico/BajaNorte)", "-08:00 PT (Canada/Pacific)", "-08:00 PT (America/Vancouver)", "-08:00 PT (America/Tijuana)", "-08:00 PT (America/Santa_Isabel)", "-08:00 PT (America/Los_Angeles)", "-08:00 PT (America/Ensenada)", "-07:00 MT (US/Mountain)", "-07:00 MT (US/Arizona)", "-07:00 MT (SystemV/MST7MDT)", "-07:00 MT (SystemV/MST7)", "-07:00 MT (Navajo)", "-07:00 MT (Mexico/BajaSur)", "-07:00 MT (MST7MDT)", "-07:00 MT (Canada/Yukon)", "-07:00 MT (Canada/Mountain)", "-07:00 MT (America/Yellowknife)", "-07:00 MT (America/Whitehorse)", "-07:00 MT (America/Shiprock)", "-07:00 MT (America/Phoenix)", "-07:00 MT (America/Ojinaga)", "-07:00 MT (America/Mazatlan)", "-07:00 MT (America/Inuvik)", "-07:00 MT (America/Hermosillo)", "-07:00 MT (America/Fort_Nelson)", "-07:00 MT (America/Edmonton)", "-07:00 MT (America/Denver)", "-07:00 MT (America/Dawson_Creek)", "-07:00 MT (America/Dawson)", "-07:00 MT (America/Creston)", "-07:00 MT (America/Chihuahua)", "-07:00 MT (America/Cambridge_Bay)", "-07:00 MT (America/Boise)", "-06:00 GALT (Pacific/Galapagos)", "-06:00 CT (US/Indiana-Starke)", "-06:00 CT (US/Central)", "-06:00 CT (SystemV/CST6CDT)", "-06:00 CT (SystemV/CST6)", "-06:00 CT (Mexico/General)", "-06:00 CT (Canada/Saskatchewan)", "-06:00 CT (Canada/Central)", "-06:00 CT (CST6CDT)", "-06:00 CT (America/Winnipeg)", "-06:00 CT (America/Tegucigalpa)", "-06:00 CT (America/Swift_Current)", "-06:00 CT (America/Resolute)", "-06:00 CT (America/Regina)", "-06:00 CT (America/Rankin_Inlet)", "-06:00 CT (America/Rainy_River)", "-06:00 CT (America/North_Dakota/New_Salem)", "-06:00 CT (America/North_Dakota/Center)", "-06:00 CT (America/North_Dakota/Beulah)", "-06:00 CT (America/Monterrey)", "-06:00 CT (America/Mexico_City)", "-06:00 CT (America/Merida)", "-06:00 CT (America/Menominee)", "-06:00 CT (America/Matamoros)", "-06:00 CT (America/Managua)", "-06:00 CT (America/Knox_IN)", "-06:00 CT (America/Indiana/Tell_City)", "-06:00 CT (America/Indiana/Knox)", "-06:00 CT (America/Guatemala)", "-06:00 CT (America/El_Salvador)", "-06:00 CT (America/Costa_Rica)", "-06:00 CT (America/Chicago)", "-06:00 CT (America/Belize)", "-06:00 CT (America/Bahia_Banderas)", "-05:00 PET (America/Lima)", "-05:00 ET (US/Michigan)", "-05:00 ET (US/Eastern)", "-05:00 ET (US/East-Indiana)", "-05:00 ET (SystemV/EST5EDT)", "-05:00 ET (SystemV/EST5)", "-05:00 ET (Jamaica)", "-05:00 ET (EST5EDT)", "-05:00 ET (Canada/Eastern)", "-05:00 ET (America/Toronto)", "-05:00 ET (America/Thunder_Bay)", "-05:00 ET (America/Port-au-Prince)", "-05:00 ET (America/Pangnirtung)", "-05:00 ET (America/Panama)", "-05:00 ET (America/Nipigon)", "-05:00 ET (America/New_York)", "-05:00 ET (America/Nassau)", "-05:00 ET (America/Montreal)", "-05:00 ET (America/Louisville)", "-05:00 ET (America/Kentucky/Monticello)", "-05:00 ET (America/Kentucky/Louisville)", "-05:00 ET (America/Jamaica)", "-05:00 ET (America/Iqaluit)", "-05:00 ET (America/Indianapolis)", "-05:00 ET (America/Indiana/Winamac)", "-05:00 ET (America/Indiana/Vincennes)", "-05:00 ET (America/Indiana/Vevay)", "-05:00 ET (America/Indiana/Petersburg)", "-05:00 ET (America/Indiana/Marengo)", "-05:00 ET (America/Indiana/Indianapolis)", "-05:00 ET (America/Grand_Turk)", "-05:00 ET (America/Fort_Wayne)", "-05:00 ET (America/Detroit)", "-05:00 ET (America/Coral_Harbour)", "-05:00 ET (America/Cayman)", "-05:00 ET (America/Cancun)", "-05:00 ET (America/Atikokan)", "-05:00 ECT (America/Guayaquil)", "-05:00 EAST (Pacific/Easter)", "-05:00 EAST (Chile/EasterIsland)", "-05:00 CT (Cuba)", "-05:00 CT (America/Havana)", "-05:00 COT (America/Bogota)", "-05:00 ACT (Brazil/Acre)", "-05:00 ACT (America/Rio_Branco)", "-05:00 ACT (America/Porto_Acre)", "-05:00 ACT (America/Eirunepe)", "-04:00 VET (America/Caracas)", "-04:00 GYT (America/Guyana)", "-04:00 BOT (America/La_Paz)", "-04:00 AT (SystemV/AST4ADT)", "-04:00 AT (SystemV/AST4)", "-04:00 AT (Canada/Atlantic)", "-04:00 AT (Atlantic/Bermuda)", "-04:00 AT (America/Virgin)", "-04:00 AT (America/Tortola)", "-04:00 AT (America/Thule)", "-04:00 AT (America/St_Vincent)", "-04:00 AT (America/St_Thomas)", "-04:00 AT (America/St_Lucia)", "-04:00 AT (America/St_Kitts)", "-04:00 AT (America/St_Barthelemy)", "-04:00 AT (America/Santo_Domingo)", "-04:00 AT (America/Puerto_Rico)", "-04:00 AT (America/Port_of_Spain)", "-04:00 AT (America/Montserrat)", "-04:00 AT (America/Moncton)", "-04:00 AT (America/Martinique)", "-04:00 AT (America/Marigot)", "-04:00 AT (America/Lower_Princes)", "-04:00 AT (America/Kralendijk)", "-04:00 AT (America/Halifax)", "-04:00 AT (America/Guadeloupe)", "-04:00 AT (America/Grenada)", "-04:00 AT (America/Goose_Bay)", "-04:00 AT (America/Glace_Bay)", "-04:00 AT (America/Dominica)", "-04:00 AT (America/Curacao)", "-04:00 AT (America/Blanc-Sablon)", "-04:00 AT (America/Barbados)", "-04:00 AT (America/Aruba)", "-04:00 AT (America/Antigua)", "-04:00 AT (America/Anguilla)", "-04:00 AMT (Brazil/West)", "-04:00 AMT (America/Porto_Velho)", "-04:00 AMT (America/Manaus)", "-04:00 AMT (America/Cuiaba)", "-04:00 AMT (America/Campo_Grande)", "-04:00 AMT (America/Boa_Vista)", "-03:30 NT (Canada/Newfoundland)", "-03:30 NT (America/St_Johns)", "-03:00 WGT (America/Nuuk)", "-03:00 WGT (America/Godthab)", "-03:00 UYT (America/Montevideo)", "-03:00 SRT (America/Paramaribo)", "-03:00 ROTT (Antarctica/Rothera)", "-03:00 PYT (America/Asuncion)", "-03:00 PMT (America/Miquelon)", "-03:00 GFT (America/Cayenne)", "-03:00 FKT (Atlantic/Stanley)", "-03:00 CLT (Chile/Continental)", "-03:00 CLT (Antarctica/Palmer)", "-03:00 CLT (America/Santiago)", "-03:00 BRT (Brazil/East)", "-03:00 BRT (America/Sao_Paulo)", "-03:00 BRT (America/Santarem)", "-03:00 BRT (America/Recife)", "-03:00 BRT (America/Maceio)", "-03:00 BRT (America/Fortaleza)", "-03:00 BRT (America/Belem)", "-03:00 BRT (America/Bahia)", "-03:00 BRT (America/Araguaina)", "-03:00 America/Punta_Arenas (America/Punta_Arenas)", "-03:00 ART (America/Rosario)", "-03:00 ART (America/Mendoza)", "-03:00 ART (America/Jujuy)", "-03:00 ART (America/Cordoba)", "-03:00 ART (America/Catamarca)", "-03:00 ART (America/Buenos_Aires)", "-03:00 ART (America/Argentina/Ushuaia)", "-03:00 ART (America/Argentina/Tucuman)", "-03:00 ART (America/Argentina/San_Luis)", "-03:00 ART (America/Argentina/San_Juan)", "-03:00 ART (America/Argentina/Salta)", "-03:00 ART (America/Argentina/Rio_Gallegos)", "-03:00 ART (America/Argentina/Mendoza)", "-03:00 ART (America/Argentina/La_Rioja)", "-03:00 ART (America/Argentina/Jujuy)", "-03:00 ART (America/Argentina/Cordoba)", "-03:00 ART (America/Argentina/ComodRivadavia)", "-03:00 ART (America/Argentina/Catamarca)", "-03:00 ART (America/Argentina/Buenos_Aires)", "-02:00 GT (Atlantic/South_Georgia)", "-02:00 FNT (Brazil/DeNoronha)", "-02:00 FNT (America/Noronha)", "-01:00 EGT (America/Scoresbysund)", "-01:00 CVT (Atlantic/Cape_Verde)", "-01:00 AZOT (Atlantic/Azores)", "+00:00 ATT (Antarctica/Troll)", "+00:00 BT (Europe/Belfast)", "+00:00 BT (Europe/Guernsey)", "+00:00 BT (Europe/Isle_of_Man)", "+00:00 BT (Europe/Jersey)", "+00:00 BT (Europe/London)", "+00:00 BT (GB)", "+00:00 BT (GB-Eire)", "+00:00 GMT (Africa/Abidjan)", "+00:00 GMT (Africa/Accra)", "+00:00 GMT (Africa/Bamako)", "+00:00 GMT (Africa/Banjul)", "+00:00 GMT (Africa/Bissau)", "+00:00 GMT (Africa/Conakry)", "+00:00 GMT (Africa/Dakar)", "+00:00 GMT (Africa/Freetown)", "+00:00 GMT (Africa/Lome)", "+00:00 GMT (Africa/Monrovia)", "+00:00 GMT (Africa/Nouakchott)", "+00:00 GMT (Africa/Ouagadougou)", "+00:00 GMT (Africa/Sao_Tome)", "+00:00 GMT (Africa/Timbuktu)", "+00:00 GMT (America/Danmarkshavn)", "+00:00 GMT (Atlantic/Reykjavik)", "+00:00 GMT (Atlantic/St_Helena)", "+00:00 GMT (Etc/Greenwich)", "+00:00 GMT (GMT0)", "+00:00 GMT (Greenwich)", "+00:00 GMT (Iceland)", "+00:00 IT (Eire)", "+00:00 IT (Europe/Dublin)", "+00:00 UTC (Etc/UCT)", "+00:00 UTC (Etc/UTC)", "+00:00 UTC (Etc/Universal)", "+00:00 UTC (Etc/Zulu)", "+00:00 UTC (UCT)", "+00:00 UTC (UTC)", "+00:00 UTC (Universal)", "+00:00 UTC (Zulu)", "+00:00 WET (Atlantic/Canary)", "+00:00 WET (Atlantic/Faeroe)", "+00:00 WET (Atlantic/Faroe)", "+00:00 WET (Atlantic/Madeira)", "+00:00 WET (Europe/Lisbon)", "+00:00 WET (Portugal)", "+00:00 WET (WET)", "+01:00 CET (Africa/Algiers)", "+01:00 CET (Africa/Ceuta)", "+01:00 CET (Africa/Tunis)", "+01:00 CET (Arctic/Longyearbyen)", "+01:00 CET (Atlantic/Jan_Mayen)", "+01:00 CET (CET)", "+01:00 CET (Europe/Amsterdam)", "+01:00 CET (Europe/Andorra)", "+01:00 CET (Europe/Belgrade)", "+01:00 CET (Europe/Berlin)", "+01:00 CET (Europe/Bratislava)", "+01:00 CET (Europe/Brussels)", "+01:00 CET (Europe/Budapest)", "+01:00 CET (Europe/Busingen)", "+01:00 CET (Europe/Copenhagen)", "+01:00 CET (Europe/Gibraltar)", "+01:00 CET (Europe/Ljubljana)", "+01:00 CET (Europe/Luxembourg)", "+01:00 CET (Europe/Madrid)", "+01:00 CET (Europe/Malta)", "+01:00 CET (Europe/Monaco)", "+01:00 CET (Europe/Oslo)", "+01:00 CET (Europe/Paris)", "+01:00 CET (Europe/Podgorica)", "+01:00 CET (Europe/Prague)", "+01:00 CET (Europe/Rome)", "+01:00 CET (Europe/San_Marino)", "+01:00 CET (Europe/Sarajevo)", "+01:00 CET (Europe/Skopje)", "+01:00 CET (Europe/Stockholm)", "+01:00 CET (Europe/Tirane)", "+01:00 CET (Europe/Vaduz)", "+01:00 CET (Europe/Vatican)", "+01:00 CET (Europe/Vienna)", "+01:00 CET (Europe/Warsaw)", "+01:00 CET (Europe/Zagreb)", "+01:00 CET (Europe/Zurich)", "+01:00 CET (Poland)", "+01:00 MET (MET)", "+01:00 WAT (Africa/Bangui)", "+01:00 WAT (Africa/Brazzaville)", "+01:00 WAT (Africa/Douala)", "+01:00 WAT (Africa/Kinshasa)", "+01:00 WAT (Africa/Lagos)", "+01:00 WAT (Africa/Libreville)", "+01:00 WAT (Africa/Luanda)", "+01:00 WAT (Africa/Malabo)", "+01:00 WAT (Africa/Ndjamena)", "+01:00 WAT (Africa/Niamey)", "+01:00 WAT (Africa/Porto-Novo)", "+01:00 WET (Africa/Casablanca)", "+01:00 WET (Africa/El_Aaiun)", "+02:00 Asia/Famagusta (Asia/Famagusta)", "+02:00 CAT (Africa/Blantyre)", "+02:00 CAT (Africa/Bujumbura)", "+02:00 CAT (Africa/Gaborone)", "+02:00 CAT (Africa/Harare)", "+02:00 CAT (Africa/Khartoum)", "+02:00 CAT (Africa/Kigali)", "+02:00 CAT (Africa/Lubumbashi)", "+02:00 CAT (Africa/Lusaka)", "+02:00 CAT (Africa/Maputo)", "+02:00 CAT (Africa/Windhoek)", "+02:00 EET (Africa/Cairo)", "+02:00 EET (Africa/Tripoli)", "+02:00 EET (Asia/Amman)", "+02:00 EET (Asia/Beirut)", "+02:00 EET (Asia/Damascus)", "+02:00 EET (Asia/Gaza)", "+02:00 EET (Asia/Hebron)", "+02:00 EET (Asia/Nicosia)", "+02:00 EET (EET)", "+02:00 EET (Egypt)", "+02:00 EET (Europe/Athens)", "+02:00 EET (Europe/Bucharest)", "+02:00 EET (Europe/Chisinau)", "+02:00 EET (Europe/Helsinki)", "+02:00 EET (Europe/Kaliningrad)", "+02:00 EET (Europe/Kiev)", "+02:00 EET (Europe/Mariehamn)", "+02:00 EET (Europe/Nicosia)", "+02:00 EET (Europe/Riga)", "+02:00 EET (Europe/Sofia)", "+02:00 EET (Europe/Tallinn)", "+02:00 EET (Europe/Tiraspol)", "+02:00 EET (Europe/Uzhgorod)", "+02:00 EET (Europe/Vilnius)", "+02:00 EET (Europe/Zaporozhye)", "+02:00 EET (Libya)", "+02:00 IT (Asia/Jerusalem)", "+02:00 IT (Asia/Tel_Aviv)", "+02:00 IT (Israel)", "+02:00 SAT (Africa/Johannesburg)", "+02:00 SAT (Africa/Maseru)", "+02:00 SAT (Africa/Mbabane)", "+03:00 AT (Asia/Aden)", "+03:00 AT (Asia/Baghdad)", "+03:00 AT (Asia/Bahrain)", "+03:00 AT (Asia/Kuwait)", "+03:00 AT (Asia/Qatar)", "+03:00 AT (Asia/Riyadh)", "+03:00 EAT (Africa/Addis_Ababa)", "+03:00 EAT (Africa/Asmara)", "+03:00 EAT (Africa/Asmera)", "+03:00 EAT (Africa/Dar_es_Salaam)", "+03:00 EAT (Africa/Djibouti)", "+03:00 EAT (Africa/Juba)", "+03:00 EAT (Africa/Kampala)", "+03:00 EAT (Africa/Mogadishu)", "+03:00 EAT (Africa/Nairobi)", "+03:00 EAT (Indian/Antananarivo)", "+03:00 EAT (Indian/Comoro)", "+03:00 EAT (Indian/Mayotte)", "+03:00 Europe/Kirov (Europe/Kirov)", "+03:00 MT (Europe/Minsk)", "+03:00 MT (Europe/Moscow)", "+03:00 MT (Europe/Simferopol)", "+03:00 MT (W-SU)", "+03:00 SYOT (Antarctica/Syowa)", "+03:00 TRT (Asia/Istanbul)", "+03:00 TRT (Europe/Istanbul)", "+03:00 TRT (Turkey)", "+03:30 IRT (Asia/Tehran)", "+03:30 IRT (Iran)", "+04:00 AMT (Asia/Yerevan)", "+04:00 AZT (Asia/Baku)", "+04:00 Europe/Astrakhan (Europe/Astrakhan)", "+04:00 Europe/Saratov (Europe/Saratov)", "+04:00 Europe/Ulyanovsk (Europe/Ulyanovsk)", "+04:00 GET (Asia/Tbilisi)", "+04:00 GT (Asia/Dubai)", "+04:00 GT (Asia/Muscat)", "+04:00 MT (Europe/Volgograd)", "+04:00 MUT (Indian/Mauritius)", "+04:00 RET (Indian/Reunion)", "+04:00 SAMT (Europe/Samara)", "+04:00 SCT (Indian/Mahe)", "+04:30 AFT (Asia/Kabul)", "+05:00 AQTT (Asia/Aqtau)", "+05:00 AQTT (Asia/Aqtobe)", "+05:00 Asia/Atyrau (Asia/Atyrau)", "+05:00 MAWT (Antarctica/Mawson)", "+05:00 MVT (Indian/Maldives)", "+05:00 ORAT (Asia/Oral)", "+05:00 PKT (Asia/Karachi)", "+05:00 QYZT (Asia/Qyzylorda)", "+05:00 TFT (Indian/Kerguelen)", "+05:00 TJT (Asia/Dushanbe)", "+05:00 TMT (Asia/Ashgabat)", "+05:00 TMT (Asia/Ashkhabad)", "+05:00 UZT (Asia/Samarkand)", "+05:00 UZT (Asia/Tashkent)", "+05:00 YEKT (Asia/Yekaterinburg)", "+05:30 IT (Asia/Calcutta)", "+05:30 IT (Asia/Colombo)", "+05:30 IT (Asia/Kolkata)", "+05:45 NPT (Asia/Kathmandu)", "+05:45 NPT (Asia/Katmandu)", "+06:00 ALMT (Asia/Almaty)", "+06:00 BDT (Asia/Dacca)", "+06:00 BDT (Asia/Dhaka)", "+06:00 BTT (Asia/Thimbu)", "+06:00 BTT (Asia/Thimphu)", "+06:00 IOT (Indian/Chagos)", "+06:00 KGT (Asia/Bishkek)", "+06:00 OMST (Asia/Omsk)", "+06:00 QOST (Asia/Qostanay)", "+06:00 VOST (Antarctica/Vostok)", "+06:00 XJT (Asia/Kashgar)", "+06:00 XJT (Asia/Urumqi)", "+06:30 CCT (Indian/Cocos)", "+06:30 MMT (Asia/Rangoon)", "+06:30 MMT (Asia/Yangon)", "+07:00 Asia/Barnaul (Asia/Barnaul)", "+07:00 Asia/Tomsk (Asia/Tomsk)", "+07:00 CIT (Indian/Christmas)", "+07:00 DAVT (Antarctica/Davis)", "+07:00 HOVT (Asia/Hovd)", "+07:00 ICT (Asia/Bangkok)", "+07:00 ICT (Asia/Ho_Chi_Minh)", "+07:00 ICT (Asia/Phnom_Penh)", "+07:00 ICT (Asia/Saigon)", "+07:00 ICT (Asia/Vientiane)", "+07:00 KRAT (Asia/Krasnoyarsk)", "+07:00 KRAT (Asia/Novokuznetsk)", "+07:00 NOVT (Asia/Novosibirsk)", "+07:00 WIB (Asia/Jakarta)", "+07:00 WIB (Asia/Pontianak)", "+08:00 AWT (Antarctica/Casey)", "+08:00 AWT (Australia/Perth)", "+08:00 AWT (Australia/West)", "+08:00 BNT (Asia/Brunei)", "+08:00 CHOT (Asia/Choibalsan)", "+08:00 CT (Asia/Chongqing)", "+08:00 CT (Asia/Chungking)", "+08:00 CT (Asia/Harbin)", "+08:00 CT (Asia/Macao)", "+08:00 CT (Asia/Macau)", "+08:00 CT (Asia/Shanghai)", "+08:00 CT (Asia/Taipei)", "+08:00 CT (PRC)", "+08:00 HKT (Asia/Hong_Kong)", "+08:00 HKT (Hongkong)", "+08:00 IRKT (Asia/Irkutsk)", "+08:00 MYT (Asia/Kuala_Lumpur)", "+08:00 MYT (Asia/Kuching)", "+08:00 PT (Asia/Manila)", "+08:00 SGT (Asia/Singapore)", "+08:00 SGT (Singapore)", "+08:00 ULAT (Asia/Ulaanbaatar)", "+08:00 ULAT (Asia/Ulan_Bator)", "+08:00 WITA (Asia/Makassar)", "+08:00 WITA (Asia/Ujung_Pandang)", "+08:45 ACWT (Australia/Eucla)", "+09:00 JT (Asia/Tokyo)", "+09:00 JT (Japan)", "+09:00 KT (Asia/Pyongyang)", "+09:00 KT (Asia/Seoul)", "+09:00 KT (ROK)", "+09:00 PWT (Pacific/Palau)", "+09:00 TLT (Asia/Dili)", "+09:00 WIT (Asia/Jayapura)", "+09:00 YAKT (Asia/Chita)", "+09:00 YAKT (Asia/Khandyga)", "+09:00 YAKT (Asia/Yakutsk)", "+09:30 ACT (Australia/Darwin)", "+09:30 ACT (Australia/North)", "+10:00 AET (Australia/Brisbane)", "+10:00 AET (Australia/Lindeman)", "+10:00 AET (Australia/Queensland)", "+10:00 CHUT (Pacific/Chuuk)", "+10:00 CHUT (Pacific/Truk)", "+10:00 CHUT (Pacific/Yap)", "+10:00 ChT (Pacific/Guam)", "+10:00 ChT (Pacific/Saipan)", "+10:00 DDUT (Antarctica/DumontDUrville)", "+10:00 PGT (Pacific/Port_Moresby)", "+10:00 VLAT (Asia/Ust-Nera)", "+10:00 VLAT (Asia/Vladivostok)", "+10:30 ACT (Australia/Adelaide)", "+10:30 ACT (Australia/Broken_Hill)", "+10:30 ACT (Australia/South)", "+10:30 ACT (Australia/Yancowinna)", "+11:00 AET (Australia/ACT)", "+11:00 AET (Australia/Canberra)", "+11:00 AET (Australia/Currie)", "+11:00 AET (Australia/Hobart)", "+11:00 AET (Australia/Melbourne)", "+11:00 AET (Australia/NSW)", "+11:00 AET (Australia/Sydney)", "+11:00 AET (Australia/Tasmania)", "+11:00 AET (Australia/Victoria)", "+11:00 BT (Pacific/Bougainville)", "+11:00 KOST (Pacific/Kosrae)", "+11:00 LHT (Australia/LHI)", "+11:00 LHT (Australia/Lord_Howe)", "+11:00 MAGT (Asia/Magadan)", "+11:00 MIST (Antarctica/Macquarie)", "+11:00 NCT (Pacific/Noumea)", "+11:00 PONT (Pacific/Pohnpei)", "+11:00 PONT (Pacific/Ponape)", "+11:00 SAKT (Asia/Sakhalin)", "+11:00 SBT (Pacific/Guadalcanal)", "+11:00 SRET (Asia/Srednekolymsk)", "+11:00 VUT (Pacific/Efate)", "+12:00 ANAT (Asia/Anadyr)", "+12:00 FJT (Pacific/Fiji)", "+12:00 GILT (Pacific/Tarawa)", "+12:00 MHT (Kwajalein)", "+12:00 MHT (Pacific/Kwajalein)", "+12:00 MHT (Pacific/Majuro)", "+12:00 NFT (Pacific/Norfolk)", "+12:00 NRT (Pacific/Nauru)", "+12:00 PETT (Asia/Kamchatka)", "+12:00 TVT (Pacific/Funafuti)", "+12:00 WAKT (Pacific/Wake)", "+12:00 WFT (Pacific/Wallis)", "+13:00 NZT (Antarctica/McMurdo)", "+13:00 NZT (Antarctica/South_Pole)", "+13:00 NZT (NZ)", "+13:00 NZT (Pacific/Auckland)", "+13:00 PHOT (Pacific/Enderbury)", "+13:00 TKT (Pacific/Fakaofo)", "+13:00 TOT (Pacific/Tongatapu)", "+13:45 CHAT (NZ-CHAT)", "+13:45 CHAT (Pacific/Chatham)", "+14:00 LINT (Pacific/Kiritimati)", "+14:00 WST (Pacific/Apia)" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.TimeZoneChooserValues",
            "values" : [ "GMT", "US/Samoa", "Pacific/Samoa", "Pacific/Pago_Pago", "Pacific/Midway", "Pacific/Niue", "Pacific/Tahiti", "US/Hawaii", "US/Aleutian", "SystemV/HST10", "Pacific/Johnston", "Pacific/Honolulu", "America/Atka", "America/Adak", "Pacific/Rarotonga", "Pacific/Marquesas", "Pacific/Gambier", "US/Alaska", "SystemV/YST9YDT", "SystemV/YST9", "America/Yakutat", "America/Sitka", "America/Nome", "America/Metlakatla", "America/Juneau", "America/Anchorage", "US/Pacific-New", "US/Pacific", "SystemV/PST8PDT", "SystemV/PST8", "Pacific/Pitcairn", "PST8PDT", "Mexico/BajaNorte", "Canada/Pacific", "America/Vancouver", "America/Tijuana", "America/Santa_Isabel", "America/Los_Angeles", "America/Ensenada", "US/Mountain", "US/Arizona", "SystemV/MST7MDT", "SystemV/MST7", "Navajo", "Mexico/BajaSur", "MST7MDT", "Canada/Yukon", "Canada/Mountain", "America/Yellowknife", "America/Whitehorse", "America/Shiprock", "America/Phoenix", "America/Ojinaga", "America/Mazatlan", "America/Inuvik", "America/Hermosillo", "America/Fort_Nelson", "America/Edmonton", "America/Denver", "America/Dawson_Creek", "America/Dawson", "America/Creston", "America/Chihuahua", "America/Cambridge_Bay", "America/Boise", "Pacific/Galapagos", "US/Indiana-Starke", "US/Central", "SystemV/CST6CDT", "SystemV/CST6", "Mexico/General", "Canada/Saskatchewan", "Canada/Central", "CST6CDT", "America/Winnipeg", "America/Tegucigalpa", "America/Swift_Current", "America/Resolute", "America/Regina", "America/Rankin_Inlet", "America/Rainy_River", "America/North_Dakota/New_Salem", "America/North_Dakota/Center", "America/North_Dakota/Beulah", "America/Monterrey", "America/Mexico_City", "America/Merida", "America/Menominee", "America/Matamoros", "America/Managua", "America/Knox_IN", "America/Indiana/Tell_City", "America/Indiana/Knox", "America/Guatemala", "America/El_Salvador", "America/Costa_Rica", "America/Chicago", "America/Belize", "America/Bahia_Banderas", "America/Lima", "US/Michigan", "US/Eastern", "US/East-Indiana", "SystemV/EST5EDT", "SystemV/EST5", "Jamaica", "EST5EDT", "Canada/Eastern", "America/Toronto", "America/Thunder_Bay", "America/Port-au-Prince", "America/Pangnirtung", "America/Panama", "America/Nipigon", "America/New_York", "America/Nassau", "America/Montreal", "America/Louisville", "America/Kentucky/Monticello", "America/Kentucky/Louisville", "America/Jamaica", "America/Iqaluit", "America/Indianapolis", "America/Indiana/Winamac", "America/Indiana/Vincennes", "America/Indiana/Vevay", "America/Indiana/Petersburg", "America/Indiana/Marengo", "America/Indiana/Indianapolis", "America/Grand_Turk", "America/Fort_Wayne", "America/Detroit", "America/Coral_Harbour", "America/Cayman", "America/Cancun", "America/Atikokan", "America/Guayaquil", "Pacific/Easter", "Chile/EasterIsland", "Cuba", "America/Havana", "America/Bogota", "Brazil/Acre", "America/Rio_Branco", "America/Porto_Acre", "America/Eirunepe", "America/Caracas", "America/Guyana", "America/La_Paz", "SystemV/AST4ADT", "SystemV/AST4", "Canada/Atlantic", "Atlantic/Bermuda", "America/Virgin", "America/Tortola", "America/Thule", "America/St_Vincent", "America/St_Thomas", "America/St_Lucia", "America/St_Kitts", "America/St_Barthelemy", "America/Santo_Domingo", "America/Puerto_Rico", "America/Port_of_Spain", "America/Montserrat", "America/Moncton", "America/Martinique", "America/Marigot", "America/Lower_Princes", "America/Kralendijk", "America/Halifax", "America/Guadeloupe", "America/Grenada", "America/Goose_Bay", "America/Glace_Bay", "America/Dominica", "America/Curacao", "America/Blanc-Sablon", "America/Barbados", "America/Aruba", "America/Antigua", "America/Anguilla", "Brazil/West", "America/Porto_Velho", "America/Manaus", "America/Cuiaba", "America/Campo_Grande", "America/Boa_Vista", "Canada/Newfoundland", "America/St_Johns", "America/Nuuk", "America/Godthab", "America/Montevideo", "America/Paramaribo", "Antarctica/Rothera", "America/Asuncion", "America/Miquelon", "America/Cayenne", "Atlantic/Stanley", "Chile/Continental", "Antarctica/Palmer", "America/Santiago", "Brazil/East", "America/Sao_Paulo", "America/Santarem", "America/Recife", "America/Maceio", "America/Fortaleza", "America/Belem", "America/Bahia", "America/Araguaina", "America/Punta_Arenas", "America/Rosario", "America/Mendoza", "America/Jujuy", "America/Cordoba", "America/Catamarca", "America/Buenos_Aires", "America/Argentina/Ushuaia", "America/Argentina/Tucuman", "America/Argentina/San_Luis", "America/Argentina/San_Juan", "America/Argentina/Salta", "America/Argentina/Rio_Gallegos", "America/Argentina/Mendoza", "America/Argentina/La_Rioja", "America/Argentina/Jujuy", "America/Argentina/Cordoba", "America/Argentina/ComodRivadavia", "America/Argentina/Catamarca", "America/Argentina/Buenos_Aires", "Atlantic/South_Georgia", "Brazil/DeNoronha", "America/Noronha", "America/Scoresbysund", "Atlantic/Cape_Verde", "Atlantic/Azores", "Antarctica/Troll", "Europe/Belfast", "Europe/Guernsey", "Europe/Isle_of_Man", "Europe/Jersey", "Europe/London", "GB", "GB-Eire", "Africa/Abidjan", "Africa/Accra", "Africa/Bamako", "Africa/Banjul", "Africa/Bissau", "Africa/Conakry", "Africa/Dakar", "Africa/Freetown", "Africa/Lome", "Africa/Monrovia", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Sao_Tome", "Africa/Timbuktu", "America/Danmarkshavn", "Atlantic/Reykjavik", "Atlantic/St_Helena", "Etc/Greenwich", "GMT0", "Greenwich", "Iceland", "Eire", "Europe/Dublin", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "UCT", "UTC", "Universal", "Zulu", "Atlantic/Canary", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Madeira", "Europe/Lisbon", "Portugal", "WET", "Africa/Algiers", "Africa/Ceuta", "Africa/Tunis", "Arctic/Longyearbyen", "Atlantic/Jan_Mayen", "CET", "Europe/Amsterdam", "Europe/Andorra", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Budapest", "Europe/Busingen", "Europe/Copenhagen", "Europe/Gibraltar", "Europe/Ljubljana", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Monaco", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Rome", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Skopje", "Europe/Stockholm", "Europe/Tirane", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zurich", "Poland", "MET", "Africa/Bangui", "Africa/Brazzaville", "Africa/Douala", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Luanda", "Africa/Malabo", "Africa/Ndjamena", "Africa/Niamey", "Africa/Porto-Novo", "Africa/Casablanca", "Africa/El_Aaiun", "Asia/Famagusta", "Africa/Blantyre", "Africa/Bujumbura", "Africa/Gaborone", "Africa/Harare", "Africa/Khartoum", "Africa/Kigali", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Maputo", "Africa/Windhoek", "Africa/Cairo", "Africa/Tripoli", "Asia/Amman", "Asia/Beirut", "Asia/Damascus", "Asia/Gaza", "Asia/Hebron", "Asia/Nicosia", "EET", "Egypt", "Europe/Athens", "Europe/Bucharest", "Europe/Chisinau", "Europe/Helsinki", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Mariehamn", "Europe/Nicosia", "Europe/Riga", "Europe/Sofia", "Europe/Tallinn", "Europe/Tiraspol", "Europe/Uzhgorod", "Europe/Vilnius", "Europe/Zaporozhye", "Libya", "Asia/Jerusalem", "Asia/Tel_Aviv", "Israel", "Africa/Johannesburg", "Africa/Maseru", "Africa/Mbabane", "Asia/Aden", "Asia/Baghdad", "Asia/Bahrain", "Asia/Kuwait", "Asia/Qatar", "Asia/Riyadh", "Africa/Addis_Ababa", "Africa/Asmara", "Africa/Asmera", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Juba", "Africa/Kampala", "Africa/Mogadishu", "Africa/Nairobi", "Indian/Antananarivo", "Indian/Comoro", "Indian/Mayotte", "Europe/Kirov", "Europe/Minsk", "Europe/Moscow", "Europe/Simferopol", "W-SU", "Antarctica/Syowa", "Asia/Istanbul", "Europe/Istanbul", "Turkey", "Asia/Tehran", "Iran", "Asia/Yerevan", "Asia/Baku", "Europe/Astrakhan", "Europe/Saratov", "Europe/Ulyanovsk", "Asia/Tbilisi", "Asia/Dubai", "Asia/Muscat", "Europe/Volgograd", "Indian/Mauritius", "Indian/Reunion", "Europe/Samara", "Indian/Mahe", "Asia/Kabul", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Atyrau", "Antarctica/Mawson", "Indian/Maldives", "Asia/Oral", "Asia/Karachi", "Asia/Qyzylorda", "Indian/Kerguelen", "Asia/Dushanbe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Samarkand", "Asia/Tashkent", "Asia/Yekaterinburg", "Asia/Calcutta", "Asia/Colombo", "Asia/Kolkata", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Almaty", "Asia/Dacca", "Asia/Dhaka", "Asia/Thimbu", "Asia/Thimphu", "Indian/Chagos", "Asia/Bishkek", "Asia/Omsk", "Asia/Qostanay", "Antarctica/Vostok", "Asia/Kashgar", "Asia/Urumqi", "Indian/Cocos", "Asia/Rangoon", "Asia/Yangon", "Asia/Barnaul", "Asia/Tomsk", "Indian/Christmas", "Antarctica/Davis", "Asia/Hovd", "Asia/Bangkok", "Asia/Ho_Chi_Minh", "Asia/Phnom_Penh", "Asia/Saigon", "Asia/Vientiane", "Asia/Krasnoyarsk", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Jakarta", "Asia/Pontianak", "Antarctica/Casey", "Australia/Perth", "Australia/West", "Asia/Brunei", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Harbin", "Asia/Macao", "Asia/Macau", "Asia/Shanghai", "Asia/Taipei", "PRC", "Asia/Hong_Kong", "Hongkong", "Asia/Irkutsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Manila", "Asia/Singapore", "Singapore", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Makassar", "Asia/Ujung_Pandang", "Australia/Eucla", "Asia/Tokyo", "Japan", "Asia/Pyongyang", "Asia/Seoul", "ROK", "Pacific/Palau", "Asia/Dili", "Asia/Jayapura", "Asia/Chita", "Asia/Khandyga", "Asia/Yakutsk", "Australia/Darwin", "Australia/North", "Australia/Brisbane", "Australia/Lindeman", "Australia/Queensland", "Pacific/Chuuk", "Pacific/Truk", "Pacific/Yap", "Pacific/Guam", "Pacific/Saipan", "Antarctica/DumontDUrville", "Pacific/Port_Moresby", "Asia/Ust-Nera", "Asia/Vladivostok", "Australia/Adelaide", "Australia/Broken_Hill", "Australia/South", "Australia/Yancowinna", "Australia/ACT", "Australia/Canberra", "Australia/Currie", "Australia/Hobart", "Australia/Melbourne", "Australia/NSW", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Pacific/Bougainville", "Pacific/Kosrae", "Australia/LHI", "Australia/Lord_Howe", "Asia/Magadan", "Antarctica/Macquarie", "Pacific/Noumea", "Pacific/Pohnpei", "Pacific/Ponape", "Asia/Sakhalin", "Pacific/Guadalcanal", "Asia/Srednekolymsk", "Pacific/Efate", "Asia/Anadyr", "Pacific/Fiji", "Pacific/Tarawa", "Kwajalein", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Norfolk", "Pacific/Nauru", "Asia/Kamchatka", "Pacific/Funafuti", "Pacific/Wake", "Pacific/Wallis", "Antarctica/McMurdo", "Antarctica/South_Pole", "NZ", "Pacific/Auckland", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Tongatapu", "NZ-CHAT", "Pacific/Chatham", "Pacific/Kiritimati", "Pacific/Apia" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 180,
          "dependsOnMap" : {
            "targetType" : [ "ZONED_DATETIME" ]
          },
          "description" : "Time Zone ",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "zonedDateTimeTargetTimeZone"
        }, {
          "name" : "otherZonedDateTimeFormat",
          "type" : "STRING",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Other Zoned DateTime Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 70,
          "dependsOnMap" : {
            "zonedDateTimeFormat" : [ "OTHER" ],
            "targetType" : [ "STRING", "ZONED_DATETIME" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "otherZonedDateTimeFormat"
        }, {
          "name" : "encoding",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "UTF-8",
          "label" : "CharSet",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.CharsetChooserValues",
            "values" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 80,
          "dependsOnMap" : {
            "targetType" : [ "STRING" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "encoding"
        } ],
        "filteringConfig" : null,
        "modelType" : "LIST_BEAN"
      },
      "lines" : 0,
      "displayPosition" : 10,
      "dependsOnMap" : {
        "convertBy" : [ "BY_FIELD" ]
      },
      "description" : "Configures field by names that should be converted",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "TYPE_CONVERSION",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "fieldTypeConverterConfigs"
    }, {
      "name" : "wholeTypeConverterConfigs",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : null,
        "valuesProviderClass" : null,
        "values" : null,
        "configDefinitions" : [ {
          "name" : "sourceType",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "INTEGER",
          "label" : "Source type",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.PrimitiveFieldTypeChooserValues",
            "values" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 10,
          "dependsOnMap" : { },
          "description" : "Converts all fields of given type",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "sourceType"
        }, {
          "name" : "targetType",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "INTEGER",
          "label" : "Convert to Type",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.PrimitiveFieldTypeChooserValues",
            "values" : [ "BOOLEAN", "CHAR", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DECIMAL", "DATE", "TIME", "DATETIME", "ZONED_DATETIME", "STRING", "BYTE_ARRAY" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : { },
          "description" : "Select a compatible data type",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "targetType"
        }, {
          "name" : "inputFieldEmpty",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ERROR",
          "label" : "Source Field is Empty",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Do not convert", "Remove field", "Set as null", "Send to error" ],
            "valuesProviderClass" : "com.streamsets.pipeline.stage.processor.fieldtypeconverter.InputFieldEmptyChooserValues",
            "values" : [ "IGNORE", "DELETE", "NULL", "ERROR" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : {
            "targetType" : [ "TIME", "FLOAT", "DECIMAL", "DATETIME", "DOUBLE", "ZONED_DATETIME", "BYTE", "LONG", "DATE", "SHORT", "CHAR", "INTEGER" ]
          },
          "description" : "Action to take when the source field is an empty string.",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "inputFieldEmpty"
        }, {
          "name" : "treatInputFieldAsDate",
          "type" : "BOOLEAN",
          "upload" : "NO",
          "defaultValue" : false,
          "label" : "Treat Input Field as Date",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : {
            "targetType" : [ "STRING" ]
          },
          "description" : "Select to convert input Long to DateTime before converting to a String",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "treatInputFieldAsDate"
        }, {
          "name" : "dataLocale",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "en,US",
          "label" : "Data Locale",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Albanian", "Albanian (Albania)", "Arabic", "Arabic (Algeria)", "Arabic (Bahrain)", "Arabic (Egypt)", "Arabic (Iraq)", "Arabic (Jordan)", "Arabic (Kuwait)", "Arabic (Lebanon)", "Arabic (Libya)", "Arabic (Morocco)", "Arabic (Oman)", "Arabic (Qatar)", "Arabic (Saudi Arabia)", "Arabic (Sudan)", "Arabic (Syria)", "Arabic (Tunisia)", "Arabic (United Arab Emirates)", "Arabic (Yemen)", "Belarusian", "Belarusian (Belarus)", "Bulgarian", "Bulgarian (Bulgaria)", "Catalan", "Catalan (Spain)", "Chinese", "Chinese (China)", "Chinese (Hong Kong)", "Chinese (Singapore)", "Chinese (Taiwan)", "Croatian", "Croatian (Croatia)", "Czech", "Czech (Czech Republic)", "Danish", "Danish (Denmark)", "Dutch", "Dutch (Belgium)", "Dutch (Netherlands)", "English", "English (Australia)", "English (Canada)", "English (India)", "English (Ireland)", "English (Malta)", "English (New Zealand)", "English (Philippines)", "English (Singapore)", "English (South Africa)", "English (United Kingdom)", "English (United States)", "Estonian", "Estonian (Estonia)", "Finnish", "Finnish (Finland)", "French", "French (Belgium)", "French (Canada)", "French (France)", "French (Luxembourg)", "French (Switzerland)", "German", "German (Austria)", "German (Germany)", "German (Greece)", "German (Luxembourg)", "German (Switzerland)", "Greek", "Greek (Cyprus)", "Greek (Greece)", "Hebrew", "Hebrew (Israel)", "Hindi", "Hindi (India)", "Hungarian", "Hungarian (Hungary)", "Icelandic", "Icelandic (Iceland)", "Indonesian", "Indonesian (Indonesia)", "Irish", "Irish (Ireland)", "Italian", "Italian (Italy)", "Italian (Switzerland)", "Japanese", "Japanese (Japan)", "Japanese (Japan,JP)", "Korean", "Korean (South Korea)", "Latvian", "Latvian (Latvia)", "Lithuanian", "Lithuanian (Lithuania)", "Macedonian", "Macedonian (Macedonia)", "Malay", "Malay (Malaysia)", "Maltese", "Maltese (Malta)", "Norwegian", "Norwegian (Norway)", "Norwegian (Norway,Nynorsk)", "Polish", "Polish (Poland)", "Portuguese", "Portuguese (Brazil)", "Portuguese (Portugal)", "Romanian", "Romanian (Romania)", "Russian", "Russian (Russia)", "Serbian (Latin)", "Serbian (Latin,Bosnia and Herzegovina)", "Serbian (Montenegro)", "Serbian (Serbia and Montenegro)", "Serbian (Serbia)", "Slovak", "Slovak (Slovakia)", "Slovenian", "Slovenian (Slovenia)", "Spanish", "Spanish (Argentina)", "Spanish (Bolivia)", "Spanish (Chile)", "Spanish (Colombia)", "Spanish (Costa Rica)", "Spanish (Cuba)", "Spanish (Dominican Republic)", "Spanish (Ecuador)", "Spanish (El Salvador)", "Spanish (Guatemala)", "Spanish (Honduras)", "Spanish (Mexico)", "Spanish (Nicaragua)", "Spanish (Panama)", "Spanish (Paraguay)", "Spanish (Peru)", "Spanish (Puerto Rico)", "Spanish (Spain)", "Spanish (United States)", "Spanish (Uruguay)", "Spanish (Venezuela)", "Swedish", "Swedish (Sweden)", "Thai", "Thai (Thailand)", "Thai (Thailand,TH)", "Turkish", "Turkish (Turkey)", "Ukrainian", "Ukrainian (Ukraine)", "Vietnamese", "Vietnamese (Vietnam)" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.LocaleChooserValues",
            "values" : [ "sq", "sq,AL", "ar", "ar,DZ", "ar,BH", "ar,EG", "ar,IQ", "ar,JO", "ar,KW", "ar,LB", "ar,LY", "ar,MA", "ar,OM", "ar,QA", "ar,SA", "ar,SD", "ar,SY", "ar,TN", "ar,AE", "ar,YE", "be", "be,BY", "bg", "bg,BG", "ca", "ca,ES", "zh", "zh,CN", "zh,HK", "zh,SG", "zh,TW", "hr", "hr,HR", "cs", "cs,CZ", "da", "da,DK", "nl", "nl,BE", "nl,NL", "en", "en,AU", "en,CA", "en,IN", "en,IE", "en,MT", "en,NZ", "en,PH", "en,SG", "en,ZA", "en,GB", "en,US", "et", "et,EE", "fi", "fi,FI", "fr", "fr,BE", "fr,CA", "fr,FR", "fr,LU", "fr,CH", "de", "de,AT", "de,DE", "de,GR", "de,LU", "de,CH", "el", "el,CY", "el,GR", "iw", "iw,IL", "hi", "hi,IN", "hu", "hu,HU", "is", "is,IS", "in", "in,ID", "ga", "ga,IE", "it", "it,IT", "it,CH", "ja", "ja,JP", "ja,JP,JP", "ko", "ko,KR", "lv", "lv,LV", "lt", "lt,LT", "mk", "mk,MK", "ms", "ms,MY", "mt", "mt,MT", "no", "no,NO", "no,NO,NY", "pl", "pl,PL", "pt", "pt,BR", "pt,PT", "ro", "ro,RO", "ru", "ru,RU", "sr", "sr,BA", "sr,ME", "sr,CS", "sr,RS", "sk", "sk,SK", "sl", "sl,SI", "es", "es,AR", "es,BO", "es,CL", "es,CO", "es,CR", "es,CU", "es,DO", "es,EC", "es,SV", "es,GT", "es,HN", "es,MX", "es,NI", "es,PA", "es,PY", "es,PE", "es,PR", "es,ES", "es,US", "es,UY", "es,VE", "sv", "sv,SE", "th", "th,TH", "th,TH,TH", "tr", "tr,TR", "uk", "uk,UA", "vi", "vi,VN" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 30,
          "dependsOnMap" : {
            "targetType" : [ "FLOAT", "DECIMAL", "DOUBLE", "ZONED_DATETIME", "BYTE", "LONG", "SHORT", "INTEGER" ]
          },
          "description" : "Affects the interpretation of locale sensitive data, such as using the comma as a decimal separator",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "dataLocale"
        }, {
          "name" : "scale",
          "type" : "NUMBER",
          "upload" : "NO",
          "defaultValue" : -1,
          "label" : "Scale",
          "mode" : "text/plain",
          "required" : false,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 40,
          "dependsOnMap" : {
            "targetType" : [ "DECIMAL" ]
          },
          "description" : "Decimal Value Scale",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "scale"
        }, {
          "name" : "decimalScaleRoundingStrategy",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ROUND_UNNECESSARY",
          "label" : "Rounding Strategy",
          "mode" : "text/plain",
          "required" : false,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Round up", "Round Down", "Round Ceil", "Round Floor", "Round Half Up", "Round Half Down", "Round Half Even", "Round Unnecessary" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.DecimalScaleRoundingStrategyChooserValues",
            "values" : [ "ROUND_UP", "ROUND_DOWN", "ROUND_CEILING", "ROUND_FLOOR", "ROUND_HALF_UP", "ROUND_HALF_DOWN", "ROUND_HALF_EVEN", "ROUND_UNNECESSARY" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 50,
          "dependsOnMap" : {
            "targetType" : [ "DECIMAL" ]
          },
          "description" : "Rounding strategy during scale conversion",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "decimalScaleRoundingStrategy"
        }, {
          "name" : "dateFormat",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "YYYY_MM_DD",
          "label" : "Date Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "yyyy-MM-dd", "dd-MMM-yyyy", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss.SSS Z", "yyyy-MM-dd'T'HH:mm'Z'", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "Other ..." ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.DateFormatChooserValues",
            "values" : [ "YYYY_MM_DD", "DD_MM_YYYY", "YYYY_MM_DD_HH_MM_SS", "YYYY_MM_DD_HH_MM_SS_SSS", "YYYY_MM_DD_HH_MM_SS_SSS_Z", "YYYY_MM_DD_T_HH_MM_Z", "YYYY_MM_DD_T_HH_MM_SS_SSS_Z", "OTHER" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 40,
          "dependsOnMap" : {
            "targetType" : [ "TIME", "DATETIME", "STRING", "DATE" ]
          },
          "description" : "Select or enter any valid date or datetime format",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "dateFormat"
        }, {
          "name" : "otherDateFormat",
          "type" : "STRING",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Other Date Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 50,
          "dependsOnMap" : {
            "dateFormat" : [ "OTHER" ],
            "targetType" : [ "TIME", "DATETIME", "STRING", "DATE" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "otherDateFormat"
        }, {
          "name" : "zonedDateTimeFormat",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "ISO_ZONED_DATE_TIME",
          "label" : "Zoned DateTime Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "yyyy-MM-dd'T'HH:mm:ssX", "yyyy-MM-dd'T'HH:mm:ssX[VV]", "Other ..." ],
            "valuesProviderClass" : "com.streamsets.pipeline.ZonedDateTimeFormatChooserValues",
            "values" : [ "ISO_OFFSET_DATE_TIME", "ISO_ZONED_DATE_TIME", "OTHER" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 60,
          "dependsOnMap" : {
            "targetType" : [ "STRING", "ZONED_DATETIME" ]
          },
          "description" : "Select or enter any valid date or datetime format",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "zonedDateTimeFormat"
        }, {
          "name" : "zonedDateTimeTargetTimeZone",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Target Time Zone",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "Same as Data Collector: +00:00 GMT (GMT)", "-11:00 ST (US/Samoa)", "-11:00 ST (Pacific/Samoa)", "-11:00 ST (Pacific/Pago_Pago)", "-11:00 ST (Pacific/Midway)", "-11:00 NUT (Pacific/Niue)", "-10:00 TAHT (Pacific/Tahiti)", "-10:00 HT (US/Hawaii)", "-10:00 HT (US/Aleutian)", "-10:00 HT (SystemV/HST10)", "-10:00 HT (Pacific/Johnston)", "-10:00 HT (Pacific/Honolulu)", "-10:00 HT (America/Atka)", "-10:00 HT (America/Adak)", "-10:00 CKT (Pacific/Rarotonga)", "-09:30 MART (Pacific/Marquesas)", "-09:00 GAMT (Pacific/Gambier)", "-09:00 AKT (US/Alaska)", "-09:00 AKT (SystemV/YST9YDT)", "-09:00 AKT (SystemV/YST9)", "-09:00 AKT (America/Yakutat)", "-09:00 AKT (America/Sitka)", "-09:00 AKT (America/Nome)", "-09:00 AKT (America/Metlakatla)", "-09:00 AKT (America/Juneau)", "-09:00 AKT (America/Anchorage)", "-08:00 PT (US/Pacific-New)", "-08:00 PT (US/Pacific)", "-08:00 PT (SystemV/PST8PDT)", "-08:00 PT (SystemV/PST8)", "-08:00 PT (Pacific/Pitcairn)", "-08:00 PT (PST8PDT)", "-08:00 PT (Mexico/BajaNorte)", "-08:00 PT (Canada/Pacific)", "-08:00 PT (America/Vancouver)", "-08:00 PT (America/Tijuana)", "-08:00 PT (America/Santa_Isabel)", "-08:00 PT (America/Los_Angeles)", "-08:00 PT (America/Ensenada)", "-07:00 MT (US/Mountain)", "-07:00 MT (US/Arizona)", "-07:00 MT (SystemV/MST7MDT)", "-07:00 MT (SystemV/MST7)", "-07:00 MT (Navajo)", "-07:00 MT (Mexico/BajaSur)", "-07:00 MT (MST7MDT)", "-07:00 MT (Canada/Yukon)", "-07:00 MT (Canada/Mountain)", "-07:00 MT (America/Yellowknife)", "-07:00 MT (America/Whitehorse)", "-07:00 MT (America/Shiprock)", "-07:00 MT (America/Phoenix)", "-07:00 MT (America/Ojinaga)", "-07:00 MT (America/Mazatlan)", "-07:00 MT (America/Inuvik)", "-07:00 MT (America/Hermosillo)", "-07:00 MT (America/Fort_Nelson)", "-07:00 MT (America/Edmonton)", "-07:00 MT (America/Denver)", "-07:00 MT (America/Dawson_Creek)", "-07:00 MT (America/Dawson)", "-07:00 MT (America/Creston)", "-07:00 MT (America/Chihuahua)", "-07:00 MT (America/Cambridge_Bay)", "-07:00 MT (America/Boise)", "-06:00 GALT (Pacific/Galapagos)", "-06:00 CT (US/Indiana-Starke)", "-06:00 CT (US/Central)", "-06:00 CT (SystemV/CST6CDT)", "-06:00 CT (SystemV/CST6)", "-06:00 CT (Mexico/General)", "-06:00 CT (Canada/Saskatchewan)", "-06:00 CT (Canada/Central)", "-06:00 CT (CST6CDT)", "-06:00 CT (America/Winnipeg)", "-06:00 CT (America/Tegucigalpa)", "-06:00 CT (America/Swift_Current)", "-06:00 CT (America/Resolute)", "-06:00 CT (America/Regina)", "-06:00 CT (America/Rankin_Inlet)", "-06:00 CT (America/Rainy_River)", "-06:00 CT (America/North_Dakota/New_Salem)", "-06:00 CT (America/North_Dakota/Center)", "-06:00 CT (America/North_Dakota/Beulah)", "-06:00 CT (America/Monterrey)", "-06:00 CT (America/Mexico_City)", "-06:00 CT (America/Merida)", "-06:00 CT (America/Menominee)", "-06:00 CT (America/Matamoros)", "-06:00 CT (America/Managua)", "-06:00 CT (America/Knox_IN)", "-06:00 CT (America/Indiana/Tell_City)", "-06:00 CT (America/Indiana/Knox)", "-06:00 CT (America/Guatemala)", "-06:00 CT (America/El_Salvador)", "-06:00 CT (America/Costa_Rica)", "-06:00 CT (America/Chicago)", "-06:00 CT (America/Belize)", "-06:00 CT (America/Bahia_Banderas)", "-05:00 PET (America/Lima)", "-05:00 ET (US/Michigan)", "-05:00 ET (US/Eastern)", "-05:00 ET (US/East-Indiana)", "-05:00 ET (SystemV/EST5EDT)", "-05:00 ET (SystemV/EST5)", "-05:00 ET (Jamaica)", "-05:00 ET (EST5EDT)", "-05:00 ET (Canada/Eastern)", "-05:00 ET (America/Toronto)", "-05:00 ET (America/Thunder_Bay)", "-05:00 ET (America/Port-au-Prince)", "-05:00 ET (America/Pangnirtung)", "-05:00 ET (America/Panama)", "-05:00 ET (America/Nipigon)", "-05:00 ET (America/New_York)", "-05:00 ET (America/Nassau)", "-05:00 ET (America/Montreal)", "-05:00 ET (America/Louisville)", "-05:00 ET (America/Kentucky/Monticello)", "-05:00 ET (America/Kentucky/Louisville)", "-05:00 ET (America/Jamaica)", "-05:00 ET (America/Iqaluit)", "-05:00 ET (America/Indianapolis)", "-05:00 ET (America/Indiana/Winamac)", "-05:00 ET (America/Indiana/Vincennes)", "-05:00 ET (America/Indiana/Vevay)", "-05:00 ET (America/Indiana/Petersburg)", "-05:00 ET (America/Indiana/Marengo)", "-05:00 ET (America/Indiana/Indianapolis)", "-05:00 ET (America/Grand_Turk)", "-05:00 ET (America/Fort_Wayne)", "-05:00 ET (America/Detroit)", "-05:00 ET (America/Coral_Harbour)", "-05:00 ET (America/Cayman)", "-05:00 ET (America/Cancun)", "-05:00 ET (America/Atikokan)", "-05:00 ECT (America/Guayaquil)", "-05:00 EAST (Pacific/Easter)", "-05:00 EAST (Chile/EasterIsland)", "-05:00 CT (Cuba)", "-05:00 CT (America/Havana)", "-05:00 COT (America/Bogota)", "-05:00 ACT (Brazil/Acre)", "-05:00 ACT (America/Rio_Branco)", "-05:00 ACT (America/Porto_Acre)", "-05:00 ACT (America/Eirunepe)", "-04:00 VET (America/Caracas)", "-04:00 GYT (America/Guyana)", "-04:00 BOT (America/La_Paz)", "-04:00 AT (SystemV/AST4ADT)", "-04:00 AT (SystemV/AST4)", "-04:00 AT (Canada/Atlantic)", "-04:00 AT (Atlantic/Bermuda)", "-04:00 AT (America/Virgin)", "-04:00 AT (America/Tortola)", "-04:00 AT (America/Thule)", "-04:00 AT (America/St_Vincent)", "-04:00 AT (America/St_Thomas)", "-04:00 AT (America/St_Lucia)", "-04:00 AT (America/St_Kitts)", "-04:00 AT (America/St_Barthelemy)", "-04:00 AT (America/Santo_Domingo)", "-04:00 AT (America/Puerto_Rico)", "-04:00 AT (America/Port_of_Spain)", "-04:00 AT (America/Montserrat)", "-04:00 AT (America/Moncton)", "-04:00 AT (America/Martinique)", "-04:00 AT (America/Marigot)", "-04:00 AT (America/Lower_Princes)", "-04:00 AT (America/Kralendijk)", "-04:00 AT (America/Halifax)", "-04:00 AT (America/Guadeloupe)", "-04:00 AT (America/Grenada)", "-04:00 AT (America/Goose_Bay)", "-04:00 AT (America/Glace_Bay)", "-04:00 AT (America/Dominica)", "-04:00 AT (America/Curacao)", "-04:00 AT (America/Blanc-Sablon)", "-04:00 AT (America/Barbados)", "-04:00 AT (America/Aruba)", "-04:00 AT (America/Antigua)", "-04:00 AT (America/Anguilla)", "-04:00 AMT (Brazil/West)", "-04:00 AMT (America/Porto_Velho)", "-04:00 AMT (America/Manaus)", "-04:00 AMT (America/Cuiaba)", "-04:00 AMT (America/Campo_Grande)", "-04:00 AMT (America/Boa_Vista)", "-03:30 NT (Canada/Newfoundland)", "-03:30 NT (America/St_Johns)", "-03:00 WGT (America/Nuuk)", "-03:00 WGT (America/Godthab)", "-03:00 UYT (America/Montevideo)", "-03:00 SRT (America/Paramaribo)", "-03:00 ROTT (Antarctica/Rothera)", "-03:00 PYT (America/Asuncion)", "-03:00 PMT (America/Miquelon)", "-03:00 GFT (America/Cayenne)", "-03:00 FKT (Atlantic/Stanley)", "-03:00 CLT (Chile/Continental)", "-03:00 CLT (Antarctica/Palmer)", "-03:00 CLT (America/Santiago)", "-03:00 BRT (Brazil/East)", "-03:00 BRT (America/Sao_Paulo)", "-03:00 BRT (America/Santarem)", "-03:00 BRT (America/Recife)", "-03:00 BRT (America/Maceio)", "-03:00 BRT (America/Fortaleza)", "-03:00 BRT (America/Belem)", "-03:00 BRT (America/Bahia)", "-03:00 BRT (America/Araguaina)", "-03:00 America/Punta_Arenas (America/Punta_Arenas)", "-03:00 ART (America/Rosario)", "-03:00 ART (America/Mendoza)", "-03:00 ART (America/Jujuy)", "-03:00 ART (America/Cordoba)", "-03:00 ART (America/Catamarca)", "-03:00 ART (America/Buenos_Aires)", "-03:00 ART (America/Argentina/Ushuaia)", "-03:00 ART (America/Argentina/Tucuman)", "-03:00 ART (America/Argentina/San_Luis)", "-03:00 ART (America/Argentina/San_Juan)", "-03:00 ART (America/Argentina/Salta)", "-03:00 ART (America/Argentina/Rio_Gallegos)", "-03:00 ART (America/Argentina/Mendoza)", "-03:00 ART (America/Argentina/La_Rioja)", "-03:00 ART (America/Argentina/Jujuy)", "-03:00 ART (America/Argentina/Cordoba)", "-03:00 ART (America/Argentina/ComodRivadavia)", "-03:00 ART (America/Argentina/Catamarca)", "-03:00 ART (America/Argentina/Buenos_Aires)", "-02:00 GT (Atlantic/South_Georgia)", "-02:00 FNT (Brazil/DeNoronha)", "-02:00 FNT (America/Noronha)", "-01:00 EGT (America/Scoresbysund)", "-01:00 CVT (Atlantic/Cape_Verde)", "-01:00 AZOT (Atlantic/Azores)", "+00:00 ATT (Antarctica/Troll)", "+00:00 BT (Europe/Belfast)", "+00:00 BT (Europe/Guernsey)", "+00:00 BT (Europe/Isle_of_Man)", "+00:00 BT (Europe/Jersey)", "+00:00 BT (Europe/London)", "+00:00 BT (GB)", "+00:00 BT (GB-Eire)", "+00:00 GMT (Africa/Abidjan)", "+00:00 GMT (Africa/Accra)", "+00:00 GMT (Africa/Bamako)", "+00:00 GMT (Africa/Banjul)", "+00:00 GMT (Africa/Bissau)", "+00:00 GMT (Africa/Conakry)", "+00:00 GMT (Africa/Dakar)", "+00:00 GMT (Africa/Freetown)", "+00:00 GMT (Africa/Lome)", "+00:00 GMT (Africa/Monrovia)", "+00:00 GMT (Africa/Nouakchott)", "+00:00 GMT (Africa/Ouagadougou)", "+00:00 GMT (Africa/Sao_Tome)", "+00:00 GMT (Africa/Timbuktu)", "+00:00 GMT (America/Danmarkshavn)", "+00:00 GMT (Atlantic/Reykjavik)", "+00:00 GMT (Atlantic/St_Helena)", "+00:00 GMT (Etc/Greenwich)", "+00:00 GMT (GMT0)", "+00:00 GMT (Greenwich)", "+00:00 GMT (Iceland)", "+00:00 IT (Eire)", "+00:00 IT (Europe/Dublin)", "+00:00 UTC (Etc/UCT)", "+00:00 UTC (Etc/UTC)", "+00:00 UTC (Etc/Universal)", "+00:00 UTC (Etc/Zulu)", "+00:00 UTC (UCT)", "+00:00 UTC (UTC)", "+00:00 UTC (Universal)", "+00:00 UTC (Zulu)", "+00:00 WET (Atlantic/Canary)", "+00:00 WET (Atlantic/Faeroe)", "+00:00 WET (Atlantic/Faroe)", "+00:00 WET (Atlantic/Madeira)", "+00:00 WET (Europe/Lisbon)", "+00:00 WET (Portugal)", "+00:00 WET (WET)", "+01:00 CET (Africa/Algiers)", "+01:00 CET (Africa/Ceuta)", "+01:00 CET (Africa/Tunis)", "+01:00 CET (Arctic/Longyearbyen)", "+01:00 CET (Atlantic/Jan_Mayen)", "+01:00 CET (CET)", "+01:00 CET (Europe/Amsterdam)", "+01:00 CET (Europe/Andorra)", "+01:00 CET (Europe/Belgrade)", "+01:00 CET (Europe/Berlin)", "+01:00 CET (Europe/Bratislava)", "+01:00 CET (Europe/Brussels)", "+01:00 CET (Europe/Budapest)", "+01:00 CET (Europe/Busingen)", "+01:00 CET (Europe/Copenhagen)", "+01:00 CET (Europe/Gibraltar)", "+01:00 CET (Europe/Ljubljana)", "+01:00 CET (Europe/Luxembourg)", "+01:00 CET (Europe/Madrid)", "+01:00 CET (Europe/Malta)", "+01:00 CET (Europe/Monaco)", "+01:00 CET (Europe/Oslo)", "+01:00 CET (Europe/Paris)", "+01:00 CET (Europe/Podgorica)", "+01:00 CET (Europe/Prague)", "+01:00 CET (Europe/Rome)", "+01:00 CET (Europe/San_Marino)", "+01:00 CET (Europe/Sarajevo)", "+01:00 CET (Europe/Skopje)", "+01:00 CET (Europe/Stockholm)", "+01:00 CET (Europe/Tirane)", "+01:00 CET (Europe/Vaduz)", "+01:00 CET (Europe/Vatican)", "+01:00 CET (Europe/Vienna)", "+01:00 CET (Europe/Warsaw)", "+01:00 CET (Europe/Zagreb)", "+01:00 CET (Europe/Zurich)", "+01:00 CET (Poland)", "+01:00 MET (MET)", "+01:00 WAT (Africa/Bangui)", "+01:00 WAT (Africa/Brazzaville)", "+01:00 WAT (Africa/Douala)", "+01:00 WAT (Africa/Kinshasa)", "+01:00 WAT (Africa/Lagos)", "+01:00 WAT (Africa/Libreville)", "+01:00 WAT (Africa/Luanda)", "+01:00 WAT (Africa/Malabo)", "+01:00 WAT (Africa/Ndjamena)", "+01:00 WAT (Africa/Niamey)", "+01:00 WAT (Africa/Porto-Novo)", "+01:00 WET (Africa/Casablanca)", "+01:00 WET (Africa/El_Aaiun)", "+02:00 Asia/Famagusta (Asia/Famagusta)", "+02:00 CAT (Africa/Blantyre)", "+02:00 CAT (Africa/Bujumbura)", "+02:00 CAT (Africa/Gaborone)", "+02:00 CAT (Africa/Harare)", "+02:00 CAT (Africa/Khartoum)", "+02:00 CAT (Africa/Kigali)", "+02:00 CAT (Africa/Lubumbashi)", "+02:00 CAT (Africa/Lusaka)", "+02:00 CAT (Africa/Maputo)", "+02:00 CAT (Africa/Windhoek)", "+02:00 EET (Africa/Cairo)", "+02:00 EET (Africa/Tripoli)", "+02:00 EET (Asia/Amman)", "+02:00 EET (Asia/Beirut)", "+02:00 EET (Asia/Damascus)", "+02:00 EET (Asia/Gaza)", "+02:00 EET (Asia/Hebron)", "+02:00 EET (Asia/Nicosia)", "+02:00 EET (EET)", "+02:00 EET (Egypt)", "+02:00 EET (Europe/Athens)", "+02:00 EET (Europe/Bucharest)", "+02:00 EET (Europe/Chisinau)", "+02:00 EET (Europe/Helsinki)", "+02:00 EET (Europe/Kaliningrad)", "+02:00 EET (Europe/Kiev)", "+02:00 EET (Europe/Mariehamn)", "+02:00 EET (Europe/Nicosia)", "+02:00 EET (Europe/Riga)", "+02:00 EET (Europe/Sofia)", "+02:00 EET (Europe/Tallinn)", "+02:00 EET (Europe/Tiraspol)", "+02:00 EET (Europe/Uzhgorod)", "+02:00 EET (Europe/Vilnius)", "+02:00 EET (Europe/Zaporozhye)", "+02:00 EET (Libya)", "+02:00 IT (Asia/Jerusalem)", "+02:00 IT (Asia/Tel_Aviv)", "+02:00 IT (Israel)", "+02:00 SAT (Africa/Johannesburg)", "+02:00 SAT (Africa/Maseru)", "+02:00 SAT (Africa/Mbabane)", "+03:00 AT (Asia/Aden)", "+03:00 AT (Asia/Baghdad)", "+03:00 AT (Asia/Bahrain)", "+03:00 AT (Asia/Kuwait)", "+03:00 AT (Asia/Qatar)", "+03:00 AT (Asia/Riyadh)", "+03:00 EAT (Africa/Addis_Ababa)", "+03:00 EAT (Africa/Asmara)", "+03:00 EAT (Africa/Asmera)", "+03:00 EAT (Africa/Dar_es_Salaam)", "+03:00 EAT (Africa/Djibouti)", "+03:00 EAT (Africa/Juba)", "+03:00 EAT (Africa/Kampala)", "+03:00 EAT (Africa/Mogadishu)", "+03:00 EAT (Africa/Nairobi)", "+03:00 EAT (Indian/Antananarivo)", "+03:00 EAT (Indian/Comoro)", "+03:00 EAT (Indian/Mayotte)", "+03:00 Europe/Kirov (Europe/Kirov)", "+03:00 MT (Europe/Minsk)", "+03:00 MT (Europe/Moscow)", "+03:00 MT (Europe/Simferopol)", "+03:00 MT (W-SU)", "+03:00 SYOT (Antarctica/Syowa)", "+03:00 TRT (Asia/Istanbul)", "+03:00 TRT (Europe/Istanbul)", "+03:00 TRT (Turkey)", "+03:30 IRT (Asia/Tehran)", "+03:30 IRT (Iran)", "+04:00 AMT (Asia/Yerevan)", "+04:00 AZT (Asia/Baku)", "+04:00 Europe/Astrakhan (Europe/Astrakhan)", "+04:00 Europe/Saratov (Europe/Saratov)", "+04:00 Europe/Ulyanovsk (Europe/Ulyanovsk)", "+04:00 GET (Asia/Tbilisi)", "+04:00 GT (Asia/Dubai)", "+04:00 GT (Asia/Muscat)", "+04:00 MT (Europe/Volgograd)", "+04:00 MUT (Indian/Mauritius)", "+04:00 RET (Indian/Reunion)", "+04:00 SAMT (Europe/Samara)", "+04:00 SCT (Indian/Mahe)", "+04:30 AFT (Asia/Kabul)", "+05:00 AQTT (Asia/Aqtau)", "+05:00 AQTT (Asia/Aqtobe)", "+05:00 Asia/Atyrau (Asia/Atyrau)", "+05:00 MAWT (Antarctica/Mawson)", "+05:00 MVT (Indian/Maldives)", "+05:00 ORAT (Asia/Oral)", "+05:00 PKT (Asia/Karachi)", "+05:00 QYZT (Asia/Qyzylorda)", "+05:00 TFT (Indian/Kerguelen)", "+05:00 TJT (Asia/Dushanbe)", "+05:00 TMT (Asia/Ashgabat)", "+05:00 TMT (Asia/Ashkhabad)", "+05:00 UZT (Asia/Samarkand)", "+05:00 UZT (Asia/Tashkent)", "+05:00 YEKT (Asia/Yekaterinburg)", "+05:30 IT (Asia/Calcutta)", "+05:30 IT (Asia/Colombo)", "+05:30 IT (Asia/Kolkata)", "+05:45 NPT (Asia/Kathmandu)", "+05:45 NPT (Asia/Katmandu)", "+06:00 ALMT (Asia/Almaty)", "+06:00 BDT (Asia/Dacca)", "+06:00 BDT (Asia/Dhaka)", "+06:00 BTT (Asia/Thimbu)", "+06:00 BTT (Asia/Thimphu)", "+06:00 IOT (Indian/Chagos)", "+06:00 KGT (Asia/Bishkek)", "+06:00 OMST (Asia/Omsk)", "+06:00 QOST (Asia/Qostanay)", "+06:00 VOST (Antarctica/Vostok)", "+06:00 XJT (Asia/Kashgar)", "+06:00 XJT (Asia/Urumqi)", "+06:30 CCT (Indian/Cocos)", "+06:30 MMT (Asia/Rangoon)", "+06:30 MMT (Asia/Yangon)", "+07:00 Asia/Barnaul (Asia/Barnaul)", "+07:00 Asia/Tomsk (Asia/Tomsk)", "+07:00 CIT (Indian/Christmas)", "+07:00 DAVT (Antarctica/Davis)", "+07:00 HOVT (Asia/Hovd)", "+07:00 ICT (Asia/Bangkok)", "+07:00 ICT (Asia/Ho_Chi_Minh)", "+07:00 ICT (Asia/Phnom_Penh)", "+07:00 ICT (Asia/Saigon)", "+07:00 ICT (Asia/Vientiane)", "+07:00 KRAT (Asia/Krasnoyarsk)", "+07:00 KRAT (Asia/Novokuznetsk)", "+07:00 NOVT (Asia/Novosibirsk)", "+07:00 WIB (Asia/Jakarta)", "+07:00 WIB (Asia/Pontianak)", "+08:00 AWT (Antarctica/Casey)", "+08:00 AWT (Australia/Perth)", "+08:00 AWT (Australia/West)", "+08:00 BNT (Asia/Brunei)", "+08:00 CHOT (Asia/Choibalsan)", "+08:00 CT (Asia/Chongqing)", "+08:00 CT (Asia/Chungking)", "+08:00 CT (Asia/Harbin)", "+08:00 CT (Asia/Macao)", "+08:00 CT (Asia/Macau)", "+08:00 CT (Asia/Shanghai)", "+08:00 CT (Asia/Taipei)", "+08:00 CT (PRC)", "+08:00 HKT (Asia/Hong_Kong)", "+08:00 HKT (Hongkong)", "+08:00 IRKT (Asia/Irkutsk)", "+08:00 MYT (Asia/Kuala_Lumpur)", "+08:00 MYT (Asia/Kuching)", "+08:00 PT (Asia/Manila)", "+08:00 SGT (Asia/Singapore)", "+08:00 SGT (Singapore)", "+08:00 ULAT (Asia/Ulaanbaatar)", "+08:00 ULAT (Asia/Ulan_Bator)", "+08:00 WITA (Asia/Makassar)", "+08:00 WITA (Asia/Ujung_Pandang)", "+08:45 ACWT (Australia/Eucla)", "+09:00 JT (Asia/Tokyo)", "+09:00 JT (Japan)", "+09:00 KT (Asia/Pyongyang)", "+09:00 KT (Asia/Seoul)", "+09:00 KT (ROK)", "+09:00 PWT (Pacific/Palau)", "+09:00 TLT (Asia/Dili)", "+09:00 WIT (Asia/Jayapura)", "+09:00 YAKT (Asia/Chita)", "+09:00 YAKT (Asia/Khandyga)", "+09:00 YAKT (Asia/Yakutsk)", "+09:30 ACT (Australia/Darwin)", "+09:30 ACT (Australia/North)", "+10:00 AET (Australia/Brisbane)", "+10:00 AET (Australia/Lindeman)", "+10:00 AET (Australia/Queensland)", "+10:00 CHUT (Pacific/Chuuk)", "+10:00 CHUT (Pacific/Truk)", "+10:00 CHUT (Pacific/Yap)", "+10:00 ChT (Pacific/Guam)", "+10:00 ChT (Pacific/Saipan)", "+10:00 DDUT (Antarctica/DumontDUrville)", "+10:00 PGT (Pacific/Port_Moresby)", "+10:00 VLAT (Asia/Ust-Nera)", "+10:00 VLAT (Asia/Vladivostok)", "+10:30 ACT (Australia/Adelaide)", "+10:30 ACT (Australia/Broken_Hill)", "+10:30 ACT (Australia/South)", "+10:30 ACT (Australia/Yancowinna)", "+11:00 AET (Australia/ACT)", "+11:00 AET (Australia/Canberra)", "+11:00 AET (Australia/Currie)", "+11:00 AET (Australia/Hobart)", "+11:00 AET (Australia/Melbourne)", "+11:00 AET (Australia/NSW)", "+11:00 AET (Australia/Sydney)", "+11:00 AET (Australia/Tasmania)", "+11:00 AET (Australia/Victoria)", "+11:00 BT (Pacific/Bougainville)", "+11:00 KOST (Pacific/Kosrae)", "+11:00 LHT (Australia/LHI)", "+11:00 LHT (Australia/Lord_Howe)", "+11:00 MAGT (Asia/Magadan)", "+11:00 MIST (Antarctica/Macquarie)", "+11:00 NCT (Pacific/Noumea)", "+11:00 PONT (Pacific/Pohnpei)", "+11:00 PONT (Pacific/Ponape)", "+11:00 SAKT (Asia/Sakhalin)", "+11:00 SBT (Pacific/Guadalcanal)", "+11:00 SRET (Asia/Srednekolymsk)", "+11:00 VUT (Pacific/Efate)", "+12:00 ANAT (Asia/Anadyr)", "+12:00 FJT (Pacific/Fiji)", "+12:00 GILT (Pacific/Tarawa)", "+12:00 MHT (Kwajalein)", "+12:00 MHT (Pacific/Kwajalein)", "+12:00 MHT (Pacific/Majuro)", "+12:00 NFT (Pacific/Norfolk)", "+12:00 NRT (Pacific/Nauru)", "+12:00 PETT (Asia/Kamchatka)", "+12:00 TVT (Pacific/Funafuti)", "+12:00 WAKT (Pacific/Wake)", "+12:00 WFT (Pacific/Wallis)", "+13:00 NZT (Antarctica/McMurdo)", "+13:00 NZT (Antarctica/South_Pole)", "+13:00 NZT (NZ)", "+13:00 NZT (Pacific/Auckland)", "+13:00 PHOT (Pacific/Enderbury)", "+13:00 TKT (Pacific/Fakaofo)", "+13:00 TOT (Pacific/Tongatapu)", "+13:45 CHAT (NZ-CHAT)", "+13:45 CHAT (Pacific/Chatham)", "+14:00 LINT (Pacific/Kiritimati)", "+14:00 WST (Pacific/Apia)" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.TimeZoneChooserValues",
            "values" : [ "GMT", "US/Samoa", "Pacific/Samoa", "Pacific/Pago_Pago", "Pacific/Midway", "Pacific/Niue", "Pacific/Tahiti", "US/Hawaii", "US/Aleutian", "SystemV/HST10", "Pacific/Johnston", "Pacific/Honolulu", "America/Atka", "America/Adak", "Pacific/Rarotonga", "Pacific/Marquesas", "Pacific/Gambier", "US/Alaska", "SystemV/YST9YDT", "SystemV/YST9", "America/Yakutat", "America/Sitka", "America/Nome", "America/Metlakatla", "America/Juneau", "America/Anchorage", "US/Pacific-New", "US/Pacific", "SystemV/PST8PDT", "SystemV/PST8", "Pacific/Pitcairn", "PST8PDT", "Mexico/BajaNorte", "Canada/Pacific", "America/Vancouver", "America/Tijuana", "America/Santa_Isabel", "America/Los_Angeles", "America/Ensenada", "US/Mountain", "US/Arizona", "SystemV/MST7MDT", "SystemV/MST7", "Navajo", "Mexico/BajaSur", "MST7MDT", "Canada/Yukon", "Canada/Mountain", "America/Yellowknife", "America/Whitehorse", "America/Shiprock", "America/Phoenix", "America/Ojinaga", "America/Mazatlan", "America/Inuvik", "America/Hermosillo", "America/Fort_Nelson", "America/Edmonton", "America/Denver", "America/Dawson_Creek", "America/Dawson", "America/Creston", "America/Chihuahua", "America/Cambridge_Bay", "America/Boise", "Pacific/Galapagos", "US/Indiana-Starke", "US/Central", "SystemV/CST6CDT", "SystemV/CST6", "Mexico/General", "Canada/Saskatchewan", "Canada/Central", "CST6CDT", "America/Winnipeg", "America/Tegucigalpa", "America/Swift_Current", "America/Resolute", "America/Regina", "America/Rankin_Inlet", "America/Rainy_River", "America/North_Dakota/New_Salem", "America/North_Dakota/Center", "America/North_Dakota/Beulah", "America/Monterrey", "America/Mexico_City", "America/Merida", "America/Menominee", "America/Matamoros", "America/Managua", "America/Knox_IN", "America/Indiana/Tell_City", "America/Indiana/Knox", "America/Guatemala", "America/El_Salvador", "America/Costa_Rica", "America/Chicago", "America/Belize", "America/Bahia_Banderas", "America/Lima", "US/Michigan", "US/Eastern", "US/East-Indiana", "SystemV/EST5EDT", "SystemV/EST5", "Jamaica", "EST5EDT", "Canada/Eastern", "America/Toronto", "America/Thunder_Bay", "America/Port-au-Prince", "America/Pangnirtung", "America/Panama", "America/Nipigon", "America/New_York", "America/Nassau", "America/Montreal", "America/Louisville", "America/Kentucky/Monticello", "America/Kentucky/Louisville", "America/Jamaica", "America/Iqaluit", "America/Indianapolis", "America/Indiana/Winamac", "America/Indiana/Vincennes", "America/Indiana/Vevay", "America/Indiana/Petersburg", "America/Indiana/Marengo", "America/Indiana/Indianapolis", "America/Grand_Turk", "America/Fort_Wayne", "America/Detroit", "America/Coral_Harbour", "America/Cayman", "America/Cancun", "America/Atikokan", "America/Guayaquil", "Pacific/Easter", "Chile/EasterIsland", "Cuba", "America/Havana", "America/Bogota", "Brazil/Acre", "America/Rio_Branco", "America/Porto_Acre", "America/Eirunepe", "America/Caracas", "America/Guyana", "America/La_Paz", "SystemV/AST4ADT", "SystemV/AST4", "Canada/Atlantic", "Atlantic/Bermuda", "America/Virgin", "America/Tortola", "America/Thule", "America/St_Vincent", "America/St_Thomas", "America/St_Lucia", "America/St_Kitts", "America/St_Barthelemy", "America/Santo_Domingo", "America/Puerto_Rico", "America/Port_of_Spain", "America/Montserrat", "America/Moncton", "America/Martinique", "America/Marigot", "America/Lower_Princes", "America/Kralendijk", "America/Halifax", "America/Guadeloupe", "America/Grenada", "America/Goose_Bay", "America/Glace_Bay", "America/Dominica", "America/Curacao", "America/Blanc-Sablon", "America/Barbados", "America/Aruba", "America/Antigua", "America/Anguilla", "Brazil/West", "America/Porto_Velho", "America/Manaus", "America/Cuiaba", "America/Campo_Grande", "America/Boa_Vista", "Canada/Newfoundland", "America/St_Johns", "America/Nuuk", "America/Godthab", "America/Montevideo", "America/Paramaribo", "Antarctica/Rothera", "America/Asuncion", "America/Miquelon", "America/Cayenne", "Atlantic/Stanley", "Chile/Continental", "Antarctica/Palmer", "America/Santiago", "Brazil/East", "America/Sao_Paulo", "America/Santarem", "America/Recife", "America/Maceio", "America/Fortaleza", "America/Belem", "America/Bahia", "America/Araguaina", "America/Punta_Arenas", "America/Rosario", "America/Mendoza", "America/Jujuy", "America/Cordoba", "America/Catamarca", "America/Buenos_Aires", "America/Argentina/Ushuaia", "America/Argentina/Tucuman", "America/Argentina/San_Luis", "America/Argentina/San_Juan", "America/Argentina/Salta", "America/Argentina/Rio_Gallegos", "America/Argentina/Mendoza", "America/Argentina/La_Rioja", "America/Argentina/Jujuy", "America/Argentina/Cordoba", "America/Argentina/ComodRivadavia", "America/Argentina/Catamarca", "America/Argentina/Buenos_Aires", "Atlantic/South_Georgia", "Brazil/DeNoronha", "America/Noronha", "America/Scoresbysund", "Atlantic/Cape_Verde", "Atlantic/Azores", "Antarctica/Troll", "Europe/Belfast", "Europe/Guernsey", "Europe/Isle_of_Man", "Europe/Jersey", "Europe/London", "GB", "GB-Eire", "Africa/Abidjan", "Africa/Accra", "Africa/Bamako", "Africa/Banjul", "Africa/Bissau", "Africa/Conakry", "Africa/Dakar", "Africa/Freetown", "Africa/Lome", "Africa/Monrovia", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Sao_Tome", "Africa/Timbuktu", "America/Danmarkshavn", "Atlantic/Reykjavik", "Atlantic/St_Helena", "Etc/Greenwich", "GMT0", "Greenwich", "Iceland", "Eire", "Europe/Dublin", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "UCT", "UTC", "Universal", "Zulu", "Atlantic/Canary", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Madeira", "Europe/Lisbon", "Portugal", "WET", "Africa/Algiers", "Africa/Ceuta", "Africa/Tunis", "Arctic/Longyearbyen", "Atlantic/Jan_Mayen", "CET", "Europe/Amsterdam", "Europe/Andorra", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Budapest", "Europe/Busingen", "Europe/Copenhagen", "Europe/Gibraltar", "Europe/Ljubljana", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Monaco", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Rome", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Skopje", "Europe/Stockholm", "Europe/Tirane", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zurich", "Poland", "MET", "Africa/Bangui", "Africa/Brazzaville", "Africa/Douala", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Luanda", "Africa/Malabo", "Africa/Ndjamena", "Africa/Niamey", "Africa/Porto-Novo", "Africa/Casablanca", "Africa/El_Aaiun", "Asia/Famagusta", "Africa/Blantyre", "Africa/Bujumbura", "Africa/Gaborone", "Africa/Harare", "Africa/Khartoum", "Africa/Kigali", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Maputo", "Africa/Windhoek", "Africa/Cairo", "Africa/Tripoli", "Asia/Amman", "Asia/Beirut", "Asia/Damascus", "Asia/Gaza", "Asia/Hebron", "Asia/Nicosia", "EET", "Egypt", "Europe/Athens", "Europe/Bucharest", "Europe/Chisinau", "Europe/Helsinki", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Mariehamn", "Europe/Nicosia", "Europe/Riga", "Europe/Sofia", "Europe/Tallinn", "Europe/Tiraspol", "Europe/Uzhgorod", "Europe/Vilnius", "Europe/Zaporozhye", "Libya", "Asia/Jerusalem", "Asia/Tel_Aviv", "Israel", "Africa/Johannesburg", "Africa/Maseru", "Africa/Mbabane", "Asia/Aden", "Asia/Baghdad", "Asia/Bahrain", "Asia/Kuwait", "Asia/Qatar", "Asia/Riyadh", "Africa/Addis_Ababa", "Africa/Asmara", "Africa/Asmera", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Juba", "Africa/Kampala", "Africa/Mogadishu", "Africa/Nairobi", "Indian/Antananarivo", "Indian/Comoro", "Indian/Mayotte", "Europe/Kirov", "Europe/Minsk", "Europe/Moscow", "Europe/Simferopol", "W-SU", "Antarctica/Syowa", "Asia/Istanbul", "Europe/Istanbul", "Turkey", "Asia/Tehran", "Iran", "Asia/Yerevan", "Asia/Baku", "Europe/Astrakhan", "Europe/Saratov", "Europe/Ulyanovsk", "Asia/Tbilisi", "Asia/Dubai", "Asia/Muscat", "Europe/Volgograd", "Indian/Mauritius", "Indian/Reunion", "Europe/Samara", "Indian/Mahe", "Asia/Kabul", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Atyrau", "Antarctica/Mawson", "Indian/Maldives", "Asia/Oral", "Asia/Karachi", "Asia/Qyzylorda", "Indian/Kerguelen", "Asia/Dushanbe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Samarkand", "Asia/Tashkent", "Asia/Yekaterinburg", "Asia/Calcutta", "Asia/Colombo", "Asia/Kolkata", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Almaty", "Asia/Dacca", "Asia/Dhaka", "Asia/Thimbu", "Asia/Thimphu", "Indian/Chagos", "Asia/Bishkek", "Asia/Omsk", "Asia/Qostanay", "Antarctica/Vostok", "Asia/Kashgar", "Asia/Urumqi", "Indian/Cocos", "Asia/Rangoon", "Asia/Yangon", "Asia/Barnaul", "Asia/Tomsk", "Indian/Christmas", "Antarctica/Davis", "Asia/Hovd", "Asia/Bangkok", "Asia/Ho_Chi_Minh", "Asia/Phnom_Penh", "Asia/Saigon", "Asia/Vientiane", "Asia/Krasnoyarsk", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Jakarta", "Asia/Pontianak", "Antarctica/Casey", "Australia/Perth", "Australia/West", "Asia/Brunei", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Harbin", "Asia/Macao", "Asia/Macau", "Asia/Shanghai", "Asia/Taipei", "PRC", "Asia/Hong_Kong", "Hongkong", "Asia/Irkutsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Manila", "Asia/Singapore", "Singapore", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Makassar", "Asia/Ujung_Pandang", "Australia/Eucla", "Asia/Tokyo", "Japan", "Asia/Pyongyang", "Asia/Seoul", "ROK", "Pacific/Palau", "Asia/Dili", "Asia/Jayapura", "Asia/Chita", "Asia/Khandyga", "Asia/Yakutsk", "Australia/Darwin", "Australia/North", "Australia/Brisbane", "Australia/Lindeman", "Australia/Queensland", "Pacific/Chuuk", "Pacific/Truk", "Pacific/Yap", "Pacific/Guam", "Pacific/Saipan", "Antarctica/DumontDUrville", "Pacific/Port_Moresby", "Asia/Ust-Nera", "Asia/Vladivostok", "Australia/Adelaide", "Australia/Broken_Hill", "Australia/South", "Australia/Yancowinna", "Australia/ACT", "Australia/Canberra", "Australia/Currie", "Australia/Hobart", "Australia/Melbourne", "Australia/NSW", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Pacific/Bougainville", "Pacific/Kosrae", "Australia/LHI", "Australia/Lord_Howe", "Asia/Magadan", "Antarctica/Macquarie", "Pacific/Noumea", "Pacific/Pohnpei", "Pacific/Ponape", "Asia/Sakhalin", "Pacific/Guadalcanal", "Asia/Srednekolymsk", "Pacific/Efate", "Asia/Anadyr", "Pacific/Fiji", "Pacific/Tarawa", "Kwajalein", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Norfolk", "Pacific/Nauru", "Asia/Kamchatka", "Pacific/Funafuti", "Pacific/Wake", "Pacific/Wallis", "Antarctica/McMurdo", "Antarctica/South_Pole", "NZ", "Pacific/Auckland", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Tongatapu", "NZ-CHAT", "Pacific/Chatham", "Pacific/Kiritimati", "Pacific/Apia" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 180,
          "dependsOnMap" : {
            "targetType" : [ "ZONED_DATETIME" ]
          },
          "description" : "Time Zone ",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "zonedDateTimeTargetTimeZone"
        }, {
          "name" : "otherZonedDateTimeFormat",
          "type" : "STRING",
          "upload" : "NO",
          "defaultValue" : null,
          "label" : "Other Zoned DateTime Format",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 70,
          "dependsOnMap" : {
            "zonedDateTimeFormat" : [ "OTHER" ],
            "targetType" : [ "STRING", "ZONED_DATETIME" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "otherZonedDateTimeFormat"
        }, {
          "name" : "encoding",
          "type" : "MODEL",
          "upload" : "NO",
          "defaultValue" : "UTF-8",
          "label" : "CharSet",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : {
            "labels" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
            "valuesProviderClass" : "com.streamsets.pipeline.config.CharsetChooserValues",
            "values" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
            "configDefinitions" : null,
            "filteringConfig" : "",
            "modelType" : "VALUE_CHOOSER"
          },
          "lines" : 0,
          "displayPosition" : 80,
          "dependsOnMap" : {
            "targetType" : [ "STRING" ]
          },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "TYPE_CONVERSION",
          "displayMode" : "ADVANCED",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "encoding"
        } ],
        "filteringConfig" : null,
        "modelType" : "LIST_BEAN"
      },
      "lines" : 0,
      "displayPosition" : 10,
      "dependsOnMap" : {
        "convertBy" : [ "BY_TYPE" ]
      },
      "description" : "Configure types that should be converted. All fields of given type in a record will be converted.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "TYPE_CONVERSION",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "wholeTypeConverterConfigs"
    }, {
      "name" : "stageOnRecordError",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "TO_ERROR",
      "label" : "On Record Error",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ],
        "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
        "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 30,
      "dependsOnMap" : { },
      "description" : "Action to take with records sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageOnRecordError"
    }, {
      "name" : "stageRequiredFields",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Required Fields",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : {
        "labels" : null,
        "valuesProviderClass" : null,
        "values" : null,
        "configDefinitions" : null,
        "filteringConfig" : null,
        "modelType" : "FIELD_SELECTOR_MULTI_VALUE"
      },
      "lines" : 0,
      "displayPosition" : 10,
      "dependsOnMap" : { },
      "description" : "Records without any of these fields are sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageRequiredFields"
    }, {
      "name" : "stageRecordPreconditions",
      "type" : "LIST",
      "upload" : "NO",
      "defaultValue" : [ ],
      "label" : "Preconditions",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99" ],
      "elConstantDefinitionsIdx" : [ "64", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 20,
      "dependsOnMap" : { },
      "description" : "Records that don't satisfy all the preconditions are sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "stageRecordPreconditions"
    } ],
    "version" : "3",
    "icon" : "converter.png",
    "onRecordError" : true,
    "preconditions" : true,
    "resetOffset" : false,
    "producingEvents" : false,
    "onlineHelpRefUrl" : "index.html?contextID=task_g23_2tq_wq",
    "sendsResponse" : false,
    "beta" : false,
    "inputStreams" : -1,
    "inputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultInputStreams",
    "inputStreamLabels" : null,
    "bisectable" : false,
    "yamlUpgrader" : "upgrader/FieldTypeConverterDProcessor.yaml"
  } ],
  "services" : [ {
    "className" : "com.streamsets.service.parser.DataParserServiceImpl",
    "version" : "4",
    "description" : "",
    "label" : "DataFormat Parser",
    "library" : "streamsets-datacollector-dataformats-lib",
    "libraryLabel" : "Data Formats",
    "configGroupDefinition" : {
      "classNameToGroupsMap" : {
        "com.streamsets.service.parser.Groups" : [ "DATA_FORMAT" ]
      },
      "groupNameToLabelMapList" : [ {
        "name" : "DATA_FORMAT",
        "label" : "Data Format"
      } ]
    },
    "privateClassLoader" : false,
    "provides" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
    "configDefinitions" : [ {
      "name" : "displayFormats",
      "type" : "RUNTIME",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "List of formats that should be displayed to the user.",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 0,
      "dependsOnMap" : { },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "displayFormats"
    }, {
      "name" : "dataFormat",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Data Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Avro", "Binary", "Datagram", "Delimited", "Excel", "JSON", "Log", "Netflow", "Protobuf", "SDC Record", "Syslog", "Text", "Whole File", "XML" ],
        "valuesProviderClass" : "com.streamsets.service.parser.DataFormatChooserValues",
        "values" : [ "AVRO", "BINARY", "DATAGRAM", "DELIMITED", "EXCEL", "JSON", "LOG", "NETFLOW", "PROTOBUF", "SDC_JSON", "SYSLOG", "TEXT", "WHOLE_FILE", "XML" ],
        "configDefinitions" : null,
        "filteringConfig" : "displayFormats",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 1,
      "dependsOnMap" : { },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "dataFormat"
    }, {
      "name" : "dataFormatConfig.compression",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "NONE",
      "label" : "Compression Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "None", "Compressed File", "Archive", "Compressed Archive" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CompressionChooserValues",
        "values" : [ "NONE", "COMPRESSED_FILE", "ARCHIVE", "COMPRESSED_ARCHIVE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 2,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON", "BINARY", "XML", "LOG", "PROTOBUF", "DELIMITED", "SDC_JSON", "TEXT" ]
      },
      "description" : "Compression formats gzip, bzip2, xz, lzma, Pack200, DEFLATE and Z are supported. Archive formats 7z, ar, arj, cpio, dump, tar and zip are supported.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "compression"
    }, {
      "name" : "dataFormatConfig.filePatternInArchive",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "*",
      "label" : "File Name Pattern within Compressed Directory",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 3,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON", "BINARY", "XML", "LOG", "PROTOBUF", "DELIMITED", "SDC_JSON", "TEXT" ],
        "dataFormatConfig.compression" : [ "COMPRESSED_ARCHIVE", "ARCHIVE" ]
      },
      "description" : "A glob pattern that defines the pattern of the file names within the compressed directory.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "filePatternInArchive"
    }, {
      "name" : "dataFormatConfig.charset",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "UTF-8",
      "label" : "Charset",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CharsetChooserValues",
        "values" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 999,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON", "XML", "LOG", "DELIMITED", "TEXT", "DATAGRAM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "charset"
    }, {
      "name" : "dataFormatConfig.removeCtrlChars",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Ignore Control Characters",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1000,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON", "XML", "LOG", "DELIMITED", "TEXT", "DATAGRAM" ]
      },
      "description" : "Use only if required as it impacts reading performance",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "removeCtrlChars"
    }, {
      "name" : "dataFormatConfig.textMaxLineLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1024,
      "label" : "Max Line Length",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 340,
      "dependsOnMap" : {
        "dataFormat" : [ "TEXT" ]
      },
      "description" : "Longer lines are truncated",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "textMaxLineLen"
    }, {
      "name" : "dataFormatConfig.useCustomDelimiter",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Use Custom Delimiter",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 342,
      "dependsOnMap" : {
        "dataFormat" : [ "TEXT" ]
      },
      "description" : "Use custom delimiters to create records",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "useCustomDelimiter"
    }, {
      "name" : "dataFormatConfig.customDelimiter",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "\\r\\n",
      "label" : "Custom Delimiter",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 344,
      "dependsOnMap" : {
        "dataFormat" : [ "TEXT" ],
        "dataFormatConfig.useCustomDelimiter" : [ true ]
      },
      "description" : "One or more characters. Leading and trailing spaces are stripped.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "customDelimiter"
    }, {
      "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Include Custom Delimiter",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 346,
      "dependsOnMap" : {
        "dataFormat" : [ "TEXT" ],
        "dataFormatConfig.useCustomDelimiter" : [ true ]
      },
      "description" : "Include custom delimiters in the data",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "includeCustomDelimiterInTheText"
    }, {
      "name" : "dataFormatConfig.jsonContent",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "MULTIPLE_OBJECTS",
      "label" : "JSON Content",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "JSON array of objects", "Multiple JSON objects" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.JsonModeChooserValues",
        "values" : [ "ARRAY_OBJECTS", "MULTIPLE_OBJECTS" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 350,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "jsonContent"
    }, {
      "name" : "dataFormatConfig.jsonMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 4096,
      "label" : "Max Object Length (chars)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 360,
      "dependsOnMap" : {
        "dataFormat" : [ "JSON" ]
      },
      "description" : "Larger objects are not processed",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "jsonMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.csvHeader",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "NO_HEADER",
      "label" : "Header Line",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "With Header Line", "Ignore Header Line", "No Header Line" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CsvHeaderChooserValues",
        "values" : [ "WITH_HEADER", "IGNORE_HEADER", "NO_HEADER" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 400,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvHeader"
    }, {
      "name" : "dataFormatConfig.csvFileFormat",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "CSV",
      "label" : "Delimiter Format Type",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Default CSV (ignores empty lines)", "RFC4180 CSV", "MS Excel CSV", "MySQL CSV", "Tab Separated Values", "PostgreSQL CSV", "PostgreSQL Text", "Custom", "Multi Character Delimited" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CsvModeChooserValues",
        "values" : [ "CSV", "RFC4180", "EXCEL", "MYSQL", "TDF", "POSTGRES_CSV", "POSTGRES_TEXT", "CUSTOM", "MULTI_CHARACTER" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 405,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvFileFormat"
    }, {
      "name" : "dataFormatConfig.csvCustomDelimiter",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "|",
      "label" : "Delimiter Character",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 410,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvCustomDelimiter"
    }, {
      "name" : "dataFormatConfig.multiCharacterFieldDelimiter",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "||",
      "label" : "Multi Character Field Delimiter",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 415,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "MULTI_CHARACTER" ]
      },
      "description" : "Delimiter between fields in multi-character delimited mode.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "multiCharacterFieldDelimiter"
    }, {
      "name" : "dataFormatConfig.multiCharacterLineDelimiter",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "${str:unescapeJava('\\\\n')}",
      "label" : "Multi Character Line Delimiter",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 420,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "MULTI_CHARACTER" ]
      },
      "description" : "Delimiter between lines (i.e. different records) in multi-character delimited mode.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "multiCharacterLineDelimiter"
    }, {
      "name" : "dataFormatConfig.csvCustomEscape",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "\\",
      "label" : "Escape Character",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 425,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM", "MULTI_CHARACTER" ]
      },
      "description" : "Character used to escape quote and delimiter characters. To disable select Other and enter \\u0000 (unicode codepoint for the NULL character).",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvCustomEscape"
    }, {
      "name" : "dataFormatConfig.csvCustomQuote",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "\"",
      "label" : "Quote Character",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 430,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM", "MULTI_CHARACTER" ]
      },
      "description" : "Character used to quote string fields. To disable select Other and enter \\u0000 (unicode codepoint for the NULL character).",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvCustomQuote"
    }, {
      "name" : "dataFormatConfig.csvUnivocityFieldSeparator",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : ",",
      "label" : "Field Separator",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 440,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "Separator between fields - can be one or more characters.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityFieldSeparator"
    }, {
      "name" : "dataFormatConfig.csvUnivocityEscape",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "\\",
      "label" : "Escape Character",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 445,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "Character used to escape quote and delimiter characters.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityEscape"
    }, {
      "name" : "dataFormatConfig.csvUnivocityQuote",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "\"",
      "label" : "Quote Character",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 450,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "Character used to quote string fields.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityQuote"
    }, {
      "name" : "dataFormatConfig.csvUnivocityLineSeparator",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "${str:unescapeJava('\\\\n')}",
      "label" : "Line Separator",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 455,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "One or two characters separating individual records.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityLineSeparator"
    }, {
      "name" : "dataFormatConfig.csvParser",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "LEGACY_PARSER",
      "label" : "CSV Parser",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Univocity - faster but less powerful", "Apache Commons - slower but more powerful" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CsvParserChooserValues",
        "values" : [ "UNIVOCITY", "LEGACY_PARSER" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 500,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "CSV parser to use. In new pipelines, use the default Univocity parser for better performance",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvParser"
    }, {
      "name" : "dataFormatConfig.csvAllowExtraColumns",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Allow Extra Columns",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 505,
      "dependsOnMap" : {
        "dataFormatConfig.csvHeader" : [ "WITH_HEADER" ],
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "Allows processing rows with more fields than the header. When not enabled, the rows are sent to error",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvAllowExtraColumns"
    }, {
      "name" : "dataFormatConfig.csvExtraColumnPrefix",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "_extra_",
      "label" : "Extra Column Prefix",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 510,
      "dependsOnMap" : {
        "dataFormatConfig.csvHeader" : [ "WITH_HEADER" ],
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvAllowExtraColumns" : [ true ]
      },
      "description" : "Each extra column is labeled with this prefix followed by an integer",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvExtraColumnPrefix"
    }, {
      "name" : "dataFormatConfig.csvMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1024,
      "label" : "Max Record Length (chars)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 515,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ]
      },
      "description" : "Larger objects are not processed",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "csvMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.csvUnivocityMaxColumns",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1000,
      "label" : "Max Columns",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 520,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "Maximal number of columns to parse per line.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityMaxColumns"
    }, {
      "name" : "dataFormatConfig.csvUnivocityMaxCharsPerColumn",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1000,
      "label" : "Max Characters Per Column",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 525,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "Maximal number of character that will be read per single column.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityMaxCharsPerColumn"
    }, {
      "name" : "dataFormatConfig.csvUnivocitySkipEmptyLines",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Skip Empty Lines",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 530,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocitySkipEmptyLines"
    }, {
      "name" : "dataFormatConfig.csvUnivocityAllowComments",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Allow Comments",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 535,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityAllowComments"
    }, {
      "name" : "dataFormatConfig.csvUnivocityCommentMarker",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "#",
      "label" : "Comment Character",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 540,
      "dependsOnMap" : {
        "dataFormatConfig.csvUnivocityAllowComments" : [ true ],
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "UNIVOCITY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvUnivocityCommentMarker"
    }, {
      "name" : "dataFormatConfig.csvEnableComments",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Enable comments",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 545,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvEnableComments"
    }, {
      "name" : "dataFormatConfig.csvCommentMarker",
      "type" : "CHARACTER",
      "upload" : "NO",
      "defaultValue" : "#",
      "label" : "Comment marker",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 550,
      "dependsOnMap" : {
        "dataFormatConfig.csvEnableComments" : [ true ],
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvCommentMarker"
    }, {
      "name" : "dataFormatConfig.csvIgnoreEmptyLines",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Ignore empty lines",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 550,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.csvParser" : [ "LEGACY_PARSER" ],
        "dataFormatConfig.csvFileFormat" : [ "CUSTOM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvIgnoreEmptyLines"
    }, {
      "name" : "dataFormatConfig.csvRecordType",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "LIST_MAP",
      "label" : "Root Field Type",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "List", "List-Map" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.CsvRecordTypeChooserValues",
        "values" : [ "LIST", "LIST_MAP" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 555,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvRecordType"
    }, {
      "name" : "dataFormatConfig.csvSkipStartLines",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 0,
      "label" : "Lines to Skip",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 560,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "Number of lines to skip before reading",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 0,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "csvSkipStartLines"
    }, {
      "name" : "dataFormatConfig.parseNull",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Parse NULLs",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 565,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ]
      },
      "description" : "When checked, configured string constant will be converted into NULL field.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "parseNull"
    }, {
      "name" : "dataFormatConfig.nullConstant",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "\\\\N",
      "label" : "NULL constant",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 570,
      "dependsOnMap" : {
        "dataFormat" : [ "DELIMITED" ],
        "dataFormatConfig.parseNull" : [ true ]
      },
      "description" : "String constant that should be converted to a NULL rather then passed as it is.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "nullConstant"
    }, {
      "name" : "dataFormatConfig.xmlRecordElement",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Delimiter Element",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 440,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "XML element that acts as a record delimiter.  This may be an element name, with elements having that local name directly under the root as records.  Or, it can be a simplified XPath expression (see docs), with elements matching the XPath expression as records.  Leaving it blank will treat the whole XML document as one record.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "xmlRecordElement"
    }, {
      "name" : "dataFormatConfig.preserveRootElement",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Preserve Root Element",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 441,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "Include the root element in the output records. The root element is the last element defined in the record element delimiter or is the root element of the XML document when no delimiter is defined",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "preserveRootElement"
    }, {
      "name" : "dataFormatConfig.includeFieldXpathAttributes",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Include Field XPaths",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 442,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "Include XPath expressions that indicate the path to the input node that was parsed to create each field.  If enabled, each field will receive an attribute named \"xpath\" whose value is the XPath expression.  Any namespace prefixes will be mapped to the full URI via new xmlns:* attributes in the record header.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "includeFieldXpathAttributes"
    }, {
      "name" : "dataFormatConfig.xPathNamespaceContext",
      "type" : "MAP",
      "upload" : "NO",
      "defaultValue" : [ ],
      "label" : "Namespaces",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 445,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "Namespace context to use if the delimiter is an XPath expression.  This should map namespace prefixes to URIs.  Any namespace prefix that is used in the record separator expression must be defined here.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "xPathNamespaceContext"
    }, {
      "name" : "dataFormatConfig.outputFieldAttributes",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Output Field Attributes",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 448,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "Generate field attributes in output record for XML namespace declarations, and XML attributes.  Without this option, they will continue to be output as individual fields (separate from the element value).",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "outputFieldAttributes"
    }, {
      "name" : "dataFormatConfig.xmlMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 4096,
      "label" : "Max Record Length (chars)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 450,
      "dependsOnMap" : {
        "dataFormat" : [ "XML" ]
      },
      "description" : "Larger records are not processed",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "xmlMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.logMode",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "COMMON_LOG_FORMAT",
      "label" : "Log Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Common Log Format", "Combined Log Format", "Apache Error Log Format", "Apache Access Log Custom Format", "Regular Expression", "Grok Pattern", "Log4j", "Common Event Format (CEF)", "Log Event Extended Format (LEEF)" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.LogModeChooserValues",
        "values" : [ "COMMON_LOG_FORMAT", "COMBINED_LOG_FORMAT", "APACHE_ERROR_LOG_FORMAT", "APACHE_CUSTOM_LOG_FORMAT", "REGEX", "GROK", "LOG4J", "CEF", "LEEF" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 460,
      "dependsOnMap" : {
        "dataFormat" : [ "LOG" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "logMode"
    }, {
      "name" : "dataFormatConfig.logMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1024,
      "label" : "Max Line Length",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 470,
      "dependsOnMap" : {
        "dataFormat" : [ "LOG" ]
      },
      "description" : "Longer lines are truncated",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "logMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.retainOriginalLine",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Retain Original Line",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 480,
      "dependsOnMap" : {
        "dataFormat" : [ "LOG" ]
      },
      "description" : "Indicates if the original line of log should be retained in the record",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "retainOriginalLine"
    }, {
      "name" : "dataFormatConfig.customLogFormat",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "%h %l %u %t \"%r\" %>s %b",
      "label" : "Custom Log Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 490,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "APACHE_CUSTOM_LOG_FORMAT" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "customLogFormat"
    }, {
      "name" : "dataFormatConfig.regex",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)",
      "label" : "Regular Expression",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 500,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "REGEX" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "The regular expression which is used to parse the log line.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "regex"
    }, {
      "name" : "dataFormatConfig.fieldPathsToGroupName",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Field Path To RegEx Group Mapping",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : null,
        "valuesProviderClass" : null,
        "values" : null,
        "configDefinitions" : [ {
          "name" : "fieldPath",
          "type" : "STRING",
          "upload" : "NO",
          "defaultValue" : "/",
          "label" : "Field Path",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 10,
          "dependsOnMap" : { },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "fieldPath"
        }, {
          "name" : "group",
          "type" : "NUMBER",
          "upload" : "NO",
          "defaultValue" : 1,
          "label" : "Regular Expression Group",
          "mode" : "text/plain",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
          "elConstantDefinitionsIdx" : [ "64" ],
          "model" : null,
          "lines" : 0,
          "displayPosition" : 20,
          "dependsOnMap" : { },
          "description" : "",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "min" : -9223372036854776000,
          "group" : "",
          "displayMode" : "BASIC",
          "connectionType" : "",
          "evaluation" : "IMPLICIT",
          "max" : 9223372036854776000,
          "fieldName" : "group"
        } ],
        "filteringConfig" : null,
        "modelType" : "LIST_BEAN"
      },
      "lines" : 0,
      "displayPosition" : 510,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "REGEX" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "Map groups in the regular expression to field paths",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "fieldPathsToGroupName"
    }, {
      "name" : "dataFormatConfig.grokPatternDefinition",
      "type" : "TEXT",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Grok Pattern Definition",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 520,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "GROK" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "Define your own grok patterns which will be used to parse the logs",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "grokPatternDefinition"
    }, {
      "name" : "dataFormatConfig.grokPattern",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "%{COMMONAPACHELOG}",
      "label" : "Grok Pattern",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 530,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "GROK" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "The grok pattern which is used to parse the log line",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "grokPattern"
    }, {
      "name" : "dataFormatConfig.onParseError",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "ERROR",
      "label" : "On Parse Error",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "ERROR", "IGNORE", "INCLUDE AS STACK TRACE" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.OnParseErrorChooserValues",
        "values" : [ "ERROR", "IGNORE", "INCLUDE_AS_STACK_TRACE" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 540,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "LOG4J" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "onParseError"
    }, {
      "name" : "dataFormatConfig.maxStackTraceLines",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 50,
      "label" : "Trim Stack Trace to Length",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 550,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "LOG4J" ],
        "dataFormat" : [ "LOG" ],
        "dataFormatConfig.onParseError" : [ "INCLUDE_AS_STACK_TRACE" ]
      },
      "description" : "Any line that does not match the expected pattern will be treated as a Stack trace as long as it is part of the same message. The stack trace will be trimmed to the specified number of lines.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 0,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "maxStackTraceLines"
    }, {
      "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Use Custom Log Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 560,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "LOG4J" ],
        "dataFormat" : [ "LOG" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "enableLog4jCustomLogFormat"
    }, {
      "name" : "dataFormatConfig.log4jCustomLogFormat",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "%r [%t] %-5p %c %x - %m%n",
      "label" : "Custom Log4J Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 570,
      "dependsOnMap" : {
        "dataFormatConfig.logMode" : [ "LOG4J" ],
        "dataFormat" : [ "LOG" ],
        "dataFormatConfig.enableLog4jCustomLogFormat" : [ true ]
      },
      "description" : "Specify your own custom log4j format.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "log4jCustomLogFormat"
    }, {
      "name" : "dataFormatConfig.avroSchemaSource",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Avro Schema Location",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Message/Data Includes Schema", "In Pipeline Configuration", "Confluent Schema Registry" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.OriginAvroSchemaSourceChooserValues",
        "values" : [ "SOURCE", "INLINE", "REGISTRY" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 400,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ]
      },
      "description" : "Where to load the Avro Schema from.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "avroSchemaSource"
    }, {
      "name" : "dataFormatConfig.avroSchema",
      "type" : "TEXT",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Avro Schema",
      "mode" : "application/json",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 410,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.avroSchemaSource" : [ "INLINE" ]
      },
      "description" : "Overrides the schema included in the data (if any). Optionally use the runtime:loadResource function to use a schema stored in a file.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "avroSchema"
    }, {
      "name" : "dataFormatConfig.schemaRegistryUrls",
      "type" : "LIST",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Schema Registry URLs",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 420,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.avroSchemaSource" : [ "REGISTRY" ]
      },
      "description" : "List of Confluent Schema Registry URLs",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "schemaRegistryUrls"
    }, {
      "name" : "dataFormatConfig.basicAuth",
      "type" : "CREDENTIAL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Basic Auth User Info",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "65", "66", "67", "68" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 421,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.avroSchemaSource" : [ "REGISTRY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "basicAuth"
    }, {
      "name" : "dataFormatConfig.schemaLookupMode",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "SUBJECT",
      "label" : "Lookup Schema By",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Subject", "Schema ID", "Embedded Schema ID" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.OriginAvroSchemaLookupModeChooserValues",
        "values" : [ "SUBJECT", "ID", "AUTO" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 430,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.avroSchemaSource" : [ "REGISTRY" ]
      },
      "description" : "Whether to look up the Avro Schema by ID or fetch the latest schema for a Subject.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "schemaLookupMode"
    }, {
      "name" : "dataFormatConfig.subject",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Schema Subject",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 440,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.schemaLookupMode" : [ "SUBJECT" ],
        "dataFormatConfig.avroSchemaSource" : [ "REGISTRY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "subject"
    }, {
      "name" : "dataFormatConfig.schemaId",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Schema ID",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 450,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ],
        "dataFormatConfig.schemaLookupMode" : [ "ID" ],
        "dataFormatConfig.avroSchemaSource" : [ "REGISTRY" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "schemaId"
    }, {
      "name" : "dataFormatConfig.avroSkipUnionIndex",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Skip Union Indexes",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 460,
      "dependsOnMap" : {
        "dataFormat" : [ "AVRO" ]
      },
      "description" : "When checked generated records will not contain header attributes identifying which part of a union was used to read data in. Data Collector does not use the header attributes directly, thus this can be selected safely unless the pipeline explicitly depends on them.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "avroSkipUnionIndex"
    }, {
      "name" : "dataFormatConfig.protoDescriptorFile",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Protobuf Descriptor File",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 600,
      "dependsOnMap" : {
        "dataFormat" : [ "PROTOBUF" ]
      },
      "description" : "Protobuf Descriptor File (.desc) path relative to SDC resources directory",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "protoDescriptorFile"
    }, {
      "name" : "dataFormatConfig.messageType",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Message Type",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 610,
      "dependsOnMap" : {
        "dataFormat" : [ "PROTOBUF" ]
      },
      "description" : "Fully Qualified Message Type name. Use format <packageName>.<messageTypeName>",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "messageType"
    }, {
      "name" : "dataFormatConfig.isDelimited",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Delimited Messages",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 620,
      "dependsOnMap" : {
        "dataFormat" : [ "PROTOBUF" ]
      },
      "description" : "Should be checked when the input data is prepended with the message size. When unchecked only a single message can be present in the source file/Kafka message, etc.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "isDelimited"
    }, {
      "name" : "dataFormatConfig.binaryMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 1024,
      "label" : "Max Data Size (bytes)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 700,
      "dependsOnMap" : {
        "dataFormat" : [ "BINARY" ]
      },
      "description" : "Larger objects are not processed",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "binaryMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.datagramMode",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "SYSLOG",
      "label" : "Datagram Packet Format",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "NetFlow", "syslog", "collectd", "Raw/Separated data" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.DatagramModeChooserValues",
        "values" : [ "NETFLOW", "SYSLOG", "COLLECTD", "RAW_DATA" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 800,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "datagramMode"
    }, {
      "name" : "dataFormatConfig.typesDbPath",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "TypesDB File Path",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 820,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "COLLECTD" ]
      },
      "description" : "User-specified TypesDB file. Overrides the included version.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "typesDbPath"
    }, {
      "name" : "dataFormatConfig.convertTime",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Convert Hi-Res Time & Interval",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 830,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "COLLECTD" ]
      },
      "description" : "Converts high resolution time format interval and timestamp to unix time in (ms).",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "convertTime"
    }, {
      "name" : "dataFormatConfig.excludeInterval",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Exclude Interval",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 840,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "COLLECTD" ]
      },
      "description" : "Excludes the interval field from output records.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excludeInterval"
    }, {
      "name" : "dataFormatConfig.authFilePath",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Auth File",
      "mode" : "text/plain",
      "required" : false,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 850,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "COLLECTD" ]
      },
      "description" : "",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "authFilePath"
    }, {
      "name" : "dataFormatConfig.netflowOutputValuesMode",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "RAW_AND_INTERPRETED",
      "label" : "Record Generation Mode",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Raw only", "Interpreted only", "Raw and interpreted" ],
        "valuesProviderClass" : "com.streamsets.pipeline.lib.parser.net.netflow.OutputValuesModeChooserValues",
        "values" : [ "RAW_ONLY", "INTERPRETED_ONLY", "RAW_AND_INTERPRETED" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 870,
      "dependsOnMap" : {
        "dataFormat" : [ "NETFLOW" ]
      },
      "description" : "Determines the data that is included in the record generated from a flow. Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "netflowOutputValuesMode"
    }, {
      "name" : "dataFormatConfig.maxTemplateCacheSize",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : -1,
      "label" : "Max Templates in Cache",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 880,
      "dependsOnMap" : {
        "dataFormat" : [ "NETFLOW" ]
      },
      "description" : "Controls the maximum number of templates to cache from all sources. Additional templates received when this limit is reached cause the eviction of existing templates, least recently used first. Leave as -1 for unlimited. Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "maxTemplateCacheSize"
    }, {
      "name" : "dataFormatConfig.templateCacheTimeoutMs",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : -1,
      "label" : "Template Cache Timeout (ms)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 890,
      "dependsOnMap" : {
        "dataFormat" : [ "NETFLOW" ]
      },
      "description" : "Controls the maximum length of time flow templates are cached, after last being used to parse a data flow. Leave as -1 for unlimited (never expires). Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "templateCacheTimeoutMs"
    }, {
      "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : "RAW_AND_INTERPRETED",
      "label" : "Record Generation Mode",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "Raw only", "Interpreted only", "Raw and interpreted" ],
        "valuesProviderClass" : "com.streamsets.pipeline.lib.parser.net.netflow.OutputValuesModeChooserValues",
        "values" : [ "RAW_ONLY", "INTERPRETED_ONLY", "RAW_AND_INTERPRETED" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 870,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "NETFLOW" ]
      },
      "description" : "Determines the data that is included in the record generated from a flow. Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "netflowOutputValuesModeDatagram"
    }, {
      "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : -1,
      "label" : "Max Templates in Cache",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 880,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "NETFLOW" ]
      },
      "description" : "Controls the maximum number of templates to cache from all sources. Additional templates received when this limit is reached cause the eviction of existing templates, least recently used first. Leave as -1 for unlimited. Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "maxTemplateCacheSizeDatagram"
    }, {
      "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : -1,
      "label" : "Template Cache Timeout (ms)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 890,
      "dependsOnMap" : {
        "dataFormat" : [ "DATAGRAM" ],
        "dataFormatConfig.datagramMode" : [ "NETFLOW" ]
      },
      "description" : "Controls the maximum length of time flow templates are cached, after last being used to parse a data flow. Leave as -1 for unlimited (never expires). Only applies to NetFlow 9.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "templateCacheTimeoutMsDatagram"
    }, {
      "name" : "dataFormatConfig.wholeFileMaxObjectLen",
      "type" : "NUMBER",
      "upload" : "NO",
      "defaultValue" : 8192,
      "label" : "Buffer Size (bytes)",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 900,
      "dependsOnMap" : {
        "dataFormat" : [ "WHOLE_FILE" ]
      },
      "description" : "Size of the Buffer used to copy the file.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : 1,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 2147483647,
      "fieldName" : "wholeFileMaxObjectLen"
    }, {
      "name" : "dataFormatConfig.rateLimit",
      "type" : "STRING",
      "upload" : "NO",
      "defaultValue" : "-1",
      "label" : "Rate per second",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64", "3554", "3555", "3556" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 920,
      "dependsOnMap" : {
        "dataFormat" : [ "WHOLE_FILE" ]
      },
      "description" : "Rate / sec to manipulate bandwidth requirements for File Transfer. Use <= 0 to opt out. Default unit is B/sec",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "ADVANCED",
      "connectionType" : "",
      "evaluation" : "EXPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "rateLimit"
    }, {
      "name" : "dataFormatConfig.verifyChecksum",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Verify Checksum",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1000,
      "dependsOnMap" : {
        "dataFormat" : [ "WHOLE_FILE" ]
      },
      "description" : "When checked verifies the checksum of the stream during read.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "verifyChecksum"
    }, {
      "name" : "dataFormatConfig.excelHeader",
      "type" : "MODEL",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Excel Header Option",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : {
        "labels" : [ "With Header Line", "Ignore Header Line", "No Header Line" ],
        "valuesProviderClass" : "com.streamsets.pipeline.config.ExcelHeaderChooserValues",
        "values" : [ "WITH_HEADER", "IGNORE_HEADER", "NO_HEADER" ],
        "configDefinitions" : null,
        "filteringConfig" : "",
        "modelType" : "VALUE_CHOOSER"
      },
      "lines" : 0,
      "displayPosition" : 1000,
      "dependsOnMap" : {
        "dataFormat" : [ "EXCEL" ]
      },
      "description" : "Excel headers",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excelHeader"
    }, {
      "name" : "dataFormatConfig.excelSkipCellsWithNoHeader",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Skip Cells With No Header",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1001,
      "dependsOnMap" : {
        "dataFormat" : [ "EXCEL" ],
        "dataFormatConfig.excelHeader" : [ "WITH_HEADER" ]
      },
      "description" : "If checked, cells that have no associated header value will be skipped.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excelSkipCellsWithNoHeader"
    }, {
      "name" : "dataFormatConfig.excelIncludeCellsWithEmptyValue",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : false,
      "label" : "Include Cells With Empty Value",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1005,
      "dependsOnMap" : {
        "dataFormat" : [ "EXCEL" ]
      },
      "description" : "If checked, cells that have empty value will be included.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excelIncludeCellsWithEmptyValue"
    }, {
      "name" : "dataFormatConfig.excelReadAllSheets",
      "type" : "BOOLEAN",
      "upload" : "NO",
      "defaultValue" : true,
      "label" : "Read All Sheets",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ ],
      "elConstantDefinitionsIdx" : [ ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1020,
      "dependsOnMap" : {
        "dataFormat" : [ "EXCEL" ]
      },
      "description" : "Specifies whether all sheets from the document should be read.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excelReadAllSheets"
    }, {
      "name" : "dataFormatConfig.excelSheetNames",
      "type" : "LIST",
      "upload" : "NO",
      "defaultValue" : null,
      "label" : "Import Sheets",
      "mode" : "text/plain",
      "required" : true,
      "elDefs" : null,
      "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63" ],
      "elConstantDefinitionsIdx" : [ "64" ],
      "model" : null,
      "lines" : 0,
      "displayPosition" : 1030,
      "dependsOnMap" : {
        "dataFormatConfig.excelReadAllSheets" : [ false ],
        "dataFormat" : [ "EXCEL" ]
      },
      "description" : "Names of the sheets that should be imported. Other sheets will be ignored.",
      "dependsOn" : "",
      "triggeredByValues" : null,
      "min" : -9223372036854776000,
      "group" : "DATA_FORMAT",
      "displayMode" : "BASIC",
      "connectionType" : "",
      "evaluation" : "IMPLICIT",
      "max" : 9223372036854776000,
      "fieldName" : "excelSheetNames"
    } ]
  } ],
  "rulesElMetadata" : null,
  "elCatalog" : null,
  "runtimeConfigs" : null,
  "stageIcons" : {
    "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_processor_mapper_FieldMapperDProcessor" : "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAADgBJREFUeJztmX9wXNV1x7/n7K4kfhib3zG4Etr3dteI4jY4aTIMGbdpcCCdFjJQcNJgl4xjAzKWqcFOoTNM20BIbENlWbJxXPwj8ZAE2kDIJAWGMG5o06Z1mwoia3ffrixHIBMIRsjWr913Tv/wOiMrsrXv7Q8J3v3M+A/tu/fc83w/775z7yMYPrAkLOtqUbqDIBcrQj+hMG1LpVJvj29D05WcoTIsXLgwMjgwcKsoWhj4yPhrCrx2dOjYx/r7+4dO/BaqfoqGSmDb9oUXzDlv7cjoyF4CLSXgkoltCLioNlzDvz7yzkvjfpuxcCwau5HgrobCFvArIdbNyUzm36c7sZlELBb7fRJpgejnwFxbRJehVMY568QfM04A27ZrSXWpgu5lID7xugD/zYTWcE3Nd7u6usamI8cZAMei0RsIaAHxIq+dUxnnN/M+YwSIRqOzw+A7hLSFQXOnaq/AYVJszUO2ZbPZX1Ujx+kmGo3ODhEtV2AVgy7zG2dGCZBIJC7RfH4NRFeC+RzPAURGwfxtIbQ6jvO/FUhx2pnf2BjPU2g1VJYx89mlxpsRAiQuSySEc/ep4jZmrilPVP2JCLU6Pc4zANzyxJw2KGFZi11QCwPXoYxzNa0C2Lb9cbhYz4wbKjW+Ar1Qaq/Lj+549dChI5UYo1IsWLDgrJHBoaUguRvEl/uJIUAnRC5l5vMnuz4dAlCsMfYZYlkP0CeqNCYADAG6R5k3p9PpA1Uc1zPRaLQ+TLRKQcsJONdHCBfQZ4Vos+M4++KN9mtgXDFZw6oJsHDhwsh77777OYDuI+B3KznWFChUXlSgNZ3N/giATmMuJxFrjH2CWFoAuhE+zmUUOELQHSHXbT9w8GDvid+LFSDsK+spWLBgwVkjR4e+NPjOwF8R0+/4CKGYTE6R9wT8RTDWMHCNh3gE4sUELLYtO0XQtkht7a6urq6jPnIrmaampprc6OgSEmoB61V+nkMFXgO07ejQ0LfGn+x5pawrgG3bF7LqagHuYtB5XvsLkCKlR0Eyl0APTtJkIJVx5gDAfMta6AL3qOgtzBzxke6AqjxB4XBbKpXq8dHfM42NjReHme8k0B0ALvYRQlTwHJFsTmWzPz5dw6q+AmKxWBSuu5aIbwdwhtf+AvwbQzemMpnvA5B41P4yCF+dpOlvBDjB/Pr5cyWcbxaVlcx8gY/0RQXPMWtrMpN52Uf/KbEs66qQUItAlvjc8bwriic4zFuKlbUqrwDLsq4ioXUkejOIvb6/BNBnXGBjJpP5qd8cug919wP4m3nz5j10Rm3tF44vq5Pf+ClgYtygoBtsy+5kwubRXG5vb2/viN+cCoQStv1Z9/hHmWvAAIO9RVA5AOW2ulln7uns7DxWYj6T4kuAWGPsU4WK/lNe7wnAsEJ3CfBoJpNx/Iw/GX19fcMAvgHgG3ajfS0z1gC4Hh5WOQYWQLEjwqFH4lF7u4aoI51Ov+4ljyvr688dCdcuJ9JVqqj3/t8DAfSHIrTZ6cm+6L27N7wIEIpb1s0QWuercBF5C8RbEOaO9IRv0uXG6XFeBPBi4rJEQkL5FgItA3Bmsf0Lr5L7Ne+ui1v204VTxv84XZ9YLHY5iaweBS0laNFjjWNAoTuVaIvjZDI++vtiSgEaGhrqajlyOyBrAbK8PvEnCrsxcXf39mZLXVY9kTyYTAK468r6+gdGwzUroGgGo+hdCTOHASxhxZK4Zf1MhFpnnzf7qf379+cKTSgWjV5PQAtErwXIc00l0CQDbeHa2t3TsSs5pQCFpayZSO8GcBE8zvyJws4pFHYl5lkShdPAry1atGhTf1/fTVBdA+KPe4tCf8CMvQNHjmyIRWNbieSIAHcTKOEjJRXgXxi62clknsc0nkv8lgCxWOxSuO7aYcWXmNTrhwcB9Bkh2jDVkjkd7Nu3Lw/gOwC+UziSXgPITYUnvSiY+BJA/x4gz+WPiAwyeFeIpC2VzaY9dq8IJ914U0PDh8by7s+Z+QKPi9mwquxU5ker+f4qhYKgS2zbnqeqqwBa4fMIdmoEjhK1hWoiO5PJ5GBFxvDJSQLkQjW3MWnxe+mTCjunooVdpXAcpw/Al+fOnft3s+rOWiasLexvWZ/I8eNnDW1O96R/iBl0/Dyek5c+ksZiqvvpLOwqRX9//1A/sBXAtng0eh2I7gHoWq9xROQoEfaQG25L9TrdFUi1rJwkAE1R6RUKuw2Fwm5GGl0GNHX8g9GPLMu6IqTUAsIXMNUJp0gWId4ihCey2exAVTItA0UVPyp4WUO4fyYWdpUkk8n8AsCKeDx+v7ruShV9cLLvDgrdmu7JrsI073b8UFwhS7QnaJM/nlQq9XY6k3kIwHuTNlB+A+/DyQe8bu4NHziMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcIwAAccIEHCMAAHHCBBwjAABxwgQcMLTnYChvMTj8QuQl+Wi0sBFPN9GgA8IsVjsY3C1Gbn8LWCuZSpucZ9xAsTj8Ua47icBmuzybNuyf8bQTalM5mkAbpXTm1E0NDTU1YRqlihpM4l+BASgyIk/wYwRIB6PN2o+/4Dk8kuZOXKqdgx8FKBv25Z1kJVaw3U1O7q6uo5WM9fppvCQ3CmiXyTS8yd9VE6BqLwx/u9pF2DixFORd8Ogy0B4LD869mDMsrZzONyaTCbfmKrf+xiKR6PXgagZrlwPEDN7mfrjMLh1/N/TJoDfiZ+EOQRa547l7ok32k8S3I3Jnp5Xy5jqtHJlff25o5HI7RC6EwTbbxwReZuJN6ayzobxv1ddgDJO/EkUXhtLFaGl8Wj0BWHe5DjOC+WJXn1s2/4wiTSPEn8ewBm+N+wq/wmidoT4uynHGZ14uWoClDDxoir/TEQxgH6vqB7Ei1mx2LbsToJuOmfOnCf379+f85t7tWhqaqoZGx67mYBmUlzttaAbx7BCnxSgPZPN/s/pGlZcgBIm3lWVJ1kiX0kddJIAkLCsT4vQemL8UTEBGFgA0O7Bd448HI/abXnItmw2O+DzViqGbdvzWHBHfnRsOTMu9h1I4IB1a20ut/PVQ4eOFNOlYgL4nXgRyTPz3pDKQwey2fT4a8lM5nkAz8cbGz8K5vUAfRbFnGYyXwrgERY8ELOsfwy77j8cOHiw1/tdlZd4NPpJEK+C4s9ACPkMI6r4AZN2JHsyLwBQL53LLkAJE58jpm8ixA+nHCdzurapnp7/AnDz5dFozFW+F5BlYK6dagxmngVgjRsK32032k+HWTd0ZzL7i8uwPCQSiVmSzy8j1btAfLnvQCJvgXhHSPKPlyJz2QQoYeLHGLwrJJGvJnuSB72MWVghVjY1NDyYY2oh0J0AZhfRNcSMWwV0azwa3VcoGH8Aj0+PF2zbbiLVVe5Y7jZmPht+q1/BTwloD51R91RXV9dYqXmVLIDvd7zIqDI9IYRHnKxzqJQcunp7DwP460Qi8bDk8ytJdE1h2Z8a4kWsWGRbVjcBjyrRHmeSatkPixYtCh9+/fUbxUUzKf4QIJCPvTuAISj2aog60pn0z8uR2wl8C1BCcTcCxQ4Nhx5Jp9Ov+x1/MpLJ5CCAjU1NTZvHRsb+giH3FbvMMmg+gO2k+Eo8ardzTbi9u7v7137yaGpo+FA+FFnRf+iXK8B8qd9iXoAUK7aOurldvb297/qLcno8C1DCxA8r9PFQLvL17kPd/V7H9UJhadwJYFfCsv60sHO4usjuF4Hwt5LLr49Z1u6w6mMTi9FTEY9GrwFx85jITUyI+NzGuSJ4jkDtTk/6JVTwtQRM+OISt6xtAK2c2EiVbqcw7dN8/gFVnPasfhKGoNiaU3dDT0/PmyVn7JPjk0PrAfoTnOJL0ykQEXyfSTaK4llmPn9iAxW8rIzzj287ffMmFDtc0sczmcwvS4jjiaIEAPT/RLTJy8SLyFFi6lCijY7jvFV6quXBsqwrQqD7ROTzHkWuCAK8QkodkbrIP5WjqPNKkQIUj4gMMvEWrglv8vsOrQa2bc+D4B6orGDms6s5tqgcY6JvQaQj1dPTWc2xJ1JOAQYUurkul3us2FOomcCV9fXnjkQidxFoNYCLKjqYygEl2qpEux3Hea+iYxVJyQIocIQUraNurrVSlWo1aGhoqIuEIn/JKveC2SpX3OMnm/QsVDtS2eyPyxW3XPjeBgr0ncK+uS2dmRk2l0Jvb+8IgG0Atids+yZRrCdgod94ChwGdDuFQ9tTZd7ulpOJAky55Sh8V94UioTbC/vuDxqSdJynADwVj0b/uLBzuLbo3ir/CqL2c+bM+d774QvkSQIo0Hea/dGvVGnjmbPO7ujs7DxW6cRmAqls9iUAL9m2/WFWrAPw58Bvf7QRkUEifFOIOjLZ7C+qnmgJnDTftm1fyC5eBuOKE78pcJgIXx88duzx/v7+oeqnOHOIx+ONkpe1UFnKQI0wv8LQ71E4vOf9uhpO9sCHYtHYLQRdqKA3h8eGt/T19Q1XPbOZDRX+yXQnUir/D5jmwEStsd2HAAAAAElFTkSuQmCC",
    "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor" : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAABdUlEQVRoQ+2ZAQ0CMQxFDwVIAByAAnAAEg4JOMEB4ACcIAEJOIA2Ycndsruu6y7dSJcsubBd+1+79g6YNZWPWeX6m1SAFsC3MI/aAUgBQPGXn/CrNgQXoCveBV8VggMQEq8OEQswJl4VIgYgRrwaRAyA32g+3gcpNrI1rxTnBpAt/GDoLzPgHxEqYH4QuPe/wMET5gkmXrNGKANcAVIAJ/gNFxsuREkACPKAeeCkoDQAPEIrKQB1f+42KrJXQhcyAOrITP0qYRmwDHAj4O23I8QNoChiAWcie/YcSHwl7ybCMqBdA1z/vf0l1IABcCMgKjquM2p/yhHCr35zyvCE6z3NKQB3ELefUCBlWgywBA/4K4JWFsQAGCGEOMNcw1xQIcu8ngUgpyZRU0ipgZzi0ZYB5I4o1151GWiB0P1JSMHeYAPuHxxaNRADQYpHKi0A9D0GESVeG2AIIlp8CQA+BEt8KQAOYkcVbKiSNWuA6kBR69UDfAGOsk0xTaeqMAAAAABJRU5ErkJggg=="
  },
  "legacyStageLibs" : null,
  "eventDefinitions" : null,
  "version" : null,
  "executorVersion" : null,
  "category" : null,
  "categoryLabel" : null
}
}